// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/ssd.proto

package object_detection.protos;

public final class SsdOuterClass {
  private SsdOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SsdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.Ssd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of classes to predict.
     * </pre>
     *
     * <code>optional int32 num_classes = 1;</code>
     */
    boolean hasNumClasses();
    /**
     * <pre>
     * Number of classes to predict.
     * </pre>
     *
     * <code>optional int32 num_classes = 1;</code>
     */
    int getNumClasses();

    /**
     * <pre>
     * Image resizer for preprocessing the input image.
     * </pre>
     *
     * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
     */
    boolean hasImageResizer();
    /**
     * <pre>
     * Image resizer for preprocessing the input image.
     * </pre>
     *
     * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
     */
    object_detection.protos.ImageResizerOuterClass.ImageResizer getImageResizer();
    /**
     * <pre>
     * Image resizer for preprocessing the input image.
     * </pre>
     *
     * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
     */
    object_detection.protos.ImageResizerOuterClass.ImageResizerOrBuilder getImageResizerOrBuilder();

    /**
     * <pre>
     * Feature extractor config.
     * </pre>
     *
     * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
     */
    boolean hasFeatureExtractor();
    /**
     * <pre>
     * Feature extractor config.
     * </pre>
     *
     * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
     */
    object_detection.protos.SsdOuterClass.SsdFeatureExtractor getFeatureExtractor();
    /**
     * <pre>
     * Feature extractor config.
     * </pre>
     *
     * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
     */
    object_detection.protos.SsdOuterClass.SsdFeatureExtractorOrBuilder getFeatureExtractorOrBuilder();

    /**
     * <pre>
     * Box coder to encode the boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
     */
    boolean hasBoxCoder();
    /**
     * <pre>
     * Box coder to encode the boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
     */
    object_detection.protos.BoxCoderOuterClass.BoxCoder getBoxCoder();
    /**
     * <pre>
     * Box coder to encode the boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
     */
    object_detection.protos.BoxCoderOuterClass.BoxCoderOrBuilder getBoxCoderOrBuilder();

    /**
     * <pre>
     * Matcher to match groundtruth with anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
     */
    boolean hasMatcher();
    /**
     * <pre>
     * Matcher to match groundtruth with anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
     */
    object_detection.protos.MatcherOuterClass.Matcher getMatcher();
    /**
     * <pre>
     * Matcher to match groundtruth with anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
     */
    object_detection.protos.MatcherOuterClass.MatcherOrBuilder getMatcherOrBuilder();

    /**
     * <pre>
     * Region similarity calculator to compute similarity of boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
     */
    boolean hasSimilarityCalculator();
    /**
     * <pre>
     * Region similarity calculator to compute similarity of boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
     */
    object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator getSimilarityCalculator();
    /**
     * <pre>
     * Region similarity calculator to compute similarity of boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
     */
    object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculatorOrBuilder getSimilarityCalculatorOrBuilder();

    /**
     * <pre>
     * Whether background targets are to be encoded as an all
     * zeros vector or a one-hot vector (where background is the 0th class).
     * </pre>
     *
     * <code>optional bool encode_background_as_zeros = 12 [default = false];</code>
     */
    boolean hasEncodeBackgroundAsZeros();
    /**
     * <pre>
     * Whether background targets are to be encoded as an all
     * zeros vector or a one-hot vector (where background is the 0th class).
     * </pre>
     *
     * <code>optional bool encode_background_as_zeros = 12 [default = false];</code>
     */
    boolean getEncodeBackgroundAsZeros();

    /**
     * <pre>
     * classification weight to be associated to negative
     * anchors (default: 1.0). The weight must be in [0., 1.].
     * </pre>
     *
     * <code>optional float negative_class_weight = 13 [default = 1];</code>
     */
    boolean hasNegativeClassWeight();
    /**
     * <pre>
     * classification weight to be associated to negative
     * anchors (default: 1.0). The weight must be in [0., 1.].
     * </pre>
     *
     * <code>optional float negative_class_weight = 13 [default = 1];</code>
     */
    float getNegativeClassWeight();

    /**
     * <pre>
     * Box predictor to attach to the features.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
     */
    boolean hasBoxPredictor();
    /**
     * <pre>
     * Box predictor to attach to the features.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
     */
    object_detection.protos.BoxPredictorOuterClass.BoxPredictor getBoxPredictor();
    /**
     * <pre>
     * Box predictor to attach to the features.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
     */
    object_detection.protos.BoxPredictorOuterClass.BoxPredictorOrBuilder getBoxPredictorOrBuilder();

    /**
     * <pre>
     * Anchor generator to compute anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
     */
    boolean hasAnchorGenerator();
    /**
     * <pre>
     * Anchor generator to compute anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
     */
    object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator getAnchorGenerator();
    /**
     * <pre>
     * Anchor generator to compute anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
     */
    object_detection.protos.AnchorGeneratorOuterClass.AnchorGeneratorOrBuilder getAnchorGeneratorOrBuilder();

    /**
     * <pre>
     * Post processing to apply on the predictions.
     * </pre>
     *
     * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
     */
    boolean hasPostProcessing();
    /**
     * <pre>
     * Post processing to apply on the predictions.
     * </pre>
     *
     * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
     */
    object_detection.protos.PostProcessingOuterClass.PostProcessing getPostProcessing();
    /**
     * <pre>
     * Post processing to apply on the predictions.
     * </pre>
     *
     * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
     */
    object_detection.protos.PostProcessingOuterClass.PostProcessingOrBuilder getPostProcessingOrBuilder();

    /**
     * <pre>
     * Whether to normalize the loss by number of groundtruth boxes that match to
     * the anchors.
     * </pre>
     *
     * <code>optional bool normalize_loss_by_num_matches = 10 [default = true];</code>
     */
    boolean hasNormalizeLossByNumMatches();
    /**
     * <pre>
     * Whether to normalize the loss by number of groundtruth boxes that match to
     * the anchors.
     * </pre>
     *
     * <code>optional bool normalize_loss_by_num_matches = 10 [default = true];</code>
     */
    boolean getNormalizeLossByNumMatches();

    /**
     * <pre>
     * Whether to normalize the localization loss by the code size of the box
     * encodings. This is applied along with other normalization factors.
     * </pre>
     *
     * <code>optional bool normalize_loc_loss_by_codesize = 14 [default = false];</code>
     */
    boolean hasNormalizeLocLossByCodesize();
    /**
     * <pre>
     * Whether to normalize the localization loss by the code size of the box
     * encodings. This is applied along with other normalization factors.
     * </pre>
     *
     * <code>optional bool normalize_loc_loss_by_codesize = 14 [default = false];</code>
     */
    boolean getNormalizeLocLossByCodesize();

    /**
     * <pre>
     * Loss configuration for training.
     * </pre>
     *
     * <code>optional .object_detection.protos.Loss loss = 11;</code>
     */
    boolean hasLoss();
    /**
     * <pre>
     * Loss configuration for training.
     * </pre>
     *
     * <code>optional .object_detection.protos.Loss loss = 11;</code>
     */
    object_detection.protos.Losses.Loss getLoss();
    /**
     * <pre>
     * Loss configuration for training.
     * </pre>
     *
     * <code>optional .object_detection.protos.Loss loss = 11;</code>
     */
    object_detection.protos.Losses.LossOrBuilder getLossOrBuilder();

    /**
     * <pre>
     * Whether to update batch norm parameters during training or not.
     * When training with a relative small batch size (e.g. 1), it is
     * desirable to disable batch norm update and use pretrained batch norm
     * params.
     * Note: Some feature extractors are used with canned arg_scopes
     * (e.g resnet arg scopes).  In these cases training behavior of batch norm
     * variables may depend on both values of `batch_norm_trainable` and
     * `is_training`.
     * When canned arg_scopes are used with feature extractors `conv_hyperparams`
     * will apply only to the additional layers that are added and are outside the
     * canned arg_scope.
     * </pre>
     *
     * <code>optional bool freeze_batchnorm = 16 [default = false];</code>
     */
    boolean hasFreezeBatchnorm();
    /**
     * <pre>
     * Whether to update batch norm parameters during training or not.
     * When training with a relative small batch size (e.g. 1), it is
     * desirable to disable batch norm update and use pretrained batch norm
     * params.
     * Note: Some feature extractors are used with canned arg_scopes
     * (e.g resnet arg scopes).  In these cases training behavior of batch norm
     * variables may depend on both values of `batch_norm_trainable` and
     * `is_training`.
     * When canned arg_scopes are used with feature extractors `conv_hyperparams`
     * will apply only to the additional layers that are added and are outside the
     * canned arg_scope.
     * </pre>
     *
     * <code>optional bool freeze_batchnorm = 16 [default = false];</code>
     */
    boolean getFreezeBatchnorm();

    /**
     * <pre>
     * Whether to update batch_norm inplace during training. This is required
     * for batch norm to work correctly on TPUs. When this is false, user must add
     * a control dependency on tf.GraphKeys.UPDATE_OPS for train/loss op in order
     * to update the batch norm moving average parameters.
     * </pre>
     *
     * <code>optional bool inplace_batchnorm_update = 15 [default = false];</code>
     */
    boolean hasInplaceBatchnormUpdate();
    /**
     * <pre>
     * Whether to update batch_norm inplace during training. This is required
     * for batch norm to work correctly on TPUs. When this is false, user must add
     * a control dependency on tf.GraphKeys.UPDATE_OPS for train/loss op in order
     * to update the batch norm moving average parameters.
     * </pre>
     *
     * <code>optional bool inplace_batchnorm_update = 15 [default = false];</code>
     */
    boolean getInplaceBatchnormUpdate();

    /**
     * <pre>
     * Whether to weight the regression loss by the score of the ground truth box
     * the anchor matches to.
     * </pre>
     *
     * <code>optional bool weight_regression_loss_by_score = 17 [default = false];</code>
     */
    boolean hasWeightRegressionLossByScore();
    /**
     * <pre>
     * Whether to weight the regression loss by the score of the ground truth box
     * the anchor matches to.
     * </pre>
     *
     * <code>optional bool weight_regression_loss_by_score = 17 [default = false];</code>
     */
    boolean getWeightRegressionLossByScore();

    /**
     * <pre>
     * Whether to compute expected loss with respect to balanced positive/negative
     * sampling scheme. If false, use explicit sampling.
     * </pre>
     *
     * <code>optional bool use_expected_classification_loss_under_sampling = 18 [default = false];</code>
     */
    boolean hasUseExpectedClassificationLossUnderSampling();
    /**
     * <pre>
     * Whether to compute expected loss with respect to balanced positive/negative
     * sampling scheme. If false, use explicit sampling.
     * </pre>
     *
     * <code>optional bool use_expected_classification_loss_under_sampling = 18 [default = false];</code>
     */
    boolean getUseExpectedClassificationLossUnderSampling();

    /**
     * <pre>
     * Minimum number of effective negative samples.
     * Only applies if use_expected_classification_loss_under_sampling is true.
     * </pre>
     *
     * <code>optional float minimum_negative_sampling = 19 [default = 0];</code>
     */
    boolean hasMinimumNegativeSampling();
    /**
     * <pre>
     * Minimum number of effective negative samples.
     * Only applies if use_expected_classification_loss_under_sampling is true.
     * </pre>
     *
     * <code>optional float minimum_negative_sampling = 19 [default = 0];</code>
     */
    float getMinimumNegativeSampling();

    /**
     * <pre>
     * Desired number of effective negative samples per positive sample.
     * Only applies if use_expected_classification_loss_under_sampling is true.
     * </pre>
     *
     * <code>optional float desired_negative_sampling_ratio = 20 [default = 3];</code>
     */
    boolean hasDesiredNegativeSamplingRatio();
    /**
     * <pre>
     * Desired number of effective negative samples per positive sample.
     * Only applies if use_expected_classification_loss_under_sampling is true.
     * </pre>
     *
     * <code>optional float desired_negative_sampling_ratio = 20 [default = 3];</code>
     */
    float getDesiredNegativeSamplingRatio();
  }
  /**
   * <pre>
   * Configuration for Single Shot Detection (SSD) models.
   * Next id: 21
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.Ssd}
   */
  public  static final class Ssd extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.Ssd)
      SsdOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Ssd.newBuilder() to construct.
    private Ssd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ssd() {
      numClasses_ = 0;
      encodeBackgroundAsZeros_ = false;
      negativeClassWeight_ = 1F;
      normalizeLossByNumMatches_ = true;
      normalizeLocLossByCodesize_ = false;
      freezeBatchnorm_ = false;
      inplaceBatchnormUpdate_ = false;
      weightRegressionLossByScore_ = false;
      useExpectedClassificationLossUnderSampling_ = false;
      minimumNegativeSampling_ = 0F;
      desiredNegativeSamplingRatio_ = 3F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Ssd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              numClasses_ = input.readInt32();
              break;
            }
            case 18: {
              object_detection.protos.ImageResizerOuterClass.ImageResizer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = imageResizer_.toBuilder();
              }
              imageResizer_ = input.readMessage(object_detection.protos.ImageResizerOuterClass.ImageResizer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(imageResizer_);
                imageResizer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              object_detection.protos.SsdOuterClass.SsdFeatureExtractor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = featureExtractor_.toBuilder();
              }
              featureExtractor_ = input.readMessage(object_detection.protos.SsdOuterClass.SsdFeatureExtractor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(featureExtractor_);
                featureExtractor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              object_detection.protos.BoxCoderOuterClass.BoxCoder.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = boxCoder_.toBuilder();
              }
              boxCoder_ = input.readMessage(object_detection.protos.BoxCoderOuterClass.BoxCoder.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(boxCoder_);
                boxCoder_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              object_detection.protos.MatcherOuterClass.Matcher.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = matcher_.toBuilder();
              }
              matcher_ = input.readMessage(object_detection.protos.MatcherOuterClass.Matcher.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(matcher_);
                matcher_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = similarityCalculator_.toBuilder();
              }
              similarityCalculator_ = input.readMessage(object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(similarityCalculator_);
                similarityCalculator_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              object_detection.protos.BoxPredictorOuterClass.BoxPredictor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = boxPredictor_.toBuilder();
              }
              boxPredictor_ = input.readMessage(object_detection.protos.BoxPredictorOuterClass.BoxPredictor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(boxPredictor_);
                boxPredictor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 66: {
              object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = anchorGenerator_.toBuilder();
              }
              anchorGenerator_ = input.readMessage(object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(anchorGenerator_);
                anchorGenerator_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 74: {
              object_detection.protos.PostProcessingOuterClass.PostProcessing.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = postProcessing_.toBuilder();
              }
              postProcessing_ = input.readMessage(object_detection.protos.PostProcessingOuterClass.PostProcessing.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(postProcessing_);
                postProcessing_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 80: {
              bitField0_ |= 0x00000800;
              normalizeLossByNumMatches_ = input.readBool();
              break;
            }
            case 90: {
              object_detection.protos.Losses.Loss.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = loss_.toBuilder();
              }
              loss_ = input.readMessage(object_detection.protos.Losses.Loss.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loss_);
                loss_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000040;
              encodeBackgroundAsZeros_ = input.readBool();
              break;
            }
            case 109: {
              bitField0_ |= 0x00000080;
              negativeClassWeight_ = input.readFloat();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              normalizeLocLossByCodesize_ = input.readBool();
              break;
            }
            case 120: {
              bitField0_ |= 0x00008000;
              inplaceBatchnormUpdate_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              freezeBatchnorm_ = input.readBool();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              weightRegressionLossByScore_ = input.readBool();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              useExpectedClassificationLossUnderSampling_ = input.readBool();
              break;
            }
            case 157: {
              bitField0_ |= 0x00040000;
              minimumNegativeSampling_ = input.readFloat();
              break;
            }
            case 165: {
              bitField0_ |= 0x00080000;
              desiredNegativeSamplingRatio_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_Ssd_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_Ssd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.SsdOuterClass.Ssd.class, object_detection.protos.SsdOuterClass.Ssd.Builder.class);
    }

    private int bitField0_;
    public static final int NUM_CLASSES_FIELD_NUMBER = 1;
    private int numClasses_;
    /**
     * <pre>
     * Number of classes to predict.
     * </pre>
     *
     * <code>optional int32 num_classes = 1;</code>
     */
    public boolean hasNumClasses() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Number of classes to predict.
     * </pre>
     *
     * <code>optional int32 num_classes = 1;</code>
     */
    public int getNumClasses() {
      return numClasses_;
    }

    public static final int IMAGE_RESIZER_FIELD_NUMBER = 2;
    private object_detection.protos.ImageResizerOuterClass.ImageResizer imageResizer_;
    /**
     * <pre>
     * Image resizer for preprocessing the input image.
     * </pre>
     *
     * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
     */
    public boolean hasImageResizer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Image resizer for preprocessing the input image.
     * </pre>
     *
     * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
     */
    public object_detection.protos.ImageResizerOuterClass.ImageResizer getImageResizer() {
      return imageResizer_ == null ? object_detection.protos.ImageResizerOuterClass.ImageResizer.getDefaultInstance() : imageResizer_;
    }
    /**
     * <pre>
     * Image resizer for preprocessing the input image.
     * </pre>
     *
     * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
     */
    public object_detection.protos.ImageResizerOuterClass.ImageResizerOrBuilder getImageResizerOrBuilder() {
      return imageResizer_ == null ? object_detection.protos.ImageResizerOuterClass.ImageResizer.getDefaultInstance() : imageResizer_;
    }

    public static final int FEATURE_EXTRACTOR_FIELD_NUMBER = 3;
    private object_detection.protos.SsdOuterClass.SsdFeatureExtractor featureExtractor_;
    /**
     * <pre>
     * Feature extractor config.
     * </pre>
     *
     * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
     */
    public boolean hasFeatureExtractor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Feature extractor config.
     * </pre>
     *
     * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
     */
    public object_detection.protos.SsdOuterClass.SsdFeatureExtractor getFeatureExtractor() {
      return featureExtractor_ == null ? object_detection.protos.SsdOuterClass.SsdFeatureExtractor.getDefaultInstance() : featureExtractor_;
    }
    /**
     * <pre>
     * Feature extractor config.
     * </pre>
     *
     * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
     */
    public object_detection.protos.SsdOuterClass.SsdFeatureExtractorOrBuilder getFeatureExtractorOrBuilder() {
      return featureExtractor_ == null ? object_detection.protos.SsdOuterClass.SsdFeatureExtractor.getDefaultInstance() : featureExtractor_;
    }

    public static final int BOX_CODER_FIELD_NUMBER = 4;
    private object_detection.protos.BoxCoderOuterClass.BoxCoder boxCoder_;
    /**
     * <pre>
     * Box coder to encode the boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
     */
    public boolean hasBoxCoder() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Box coder to encode the boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
     */
    public object_detection.protos.BoxCoderOuterClass.BoxCoder getBoxCoder() {
      return boxCoder_ == null ? object_detection.protos.BoxCoderOuterClass.BoxCoder.getDefaultInstance() : boxCoder_;
    }
    /**
     * <pre>
     * Box coder to encode the boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
     */
    public object_detection.protos.BoxCoderOuterClass.BoxCoderOrBuilder getBoxCoderOrBuilder() {
      return boxCoder_ == null ? object_detection.protos.BoxCoderOuterClass.BoxCoder.getDefaultInstance() : boxCoder_;
    }

    public static final int MATCHER_FIELD_NUMBER = 5;
    private object_detection.protos.MatcherOuterClass.Matcher matcher_;
    /**
     * <pre>
     * Matcher to match groundtruth with anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
     */
    public boolean hasMatcher() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Matcher to match groundtruth with anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
     */
    public object_detection.protos.MatcherOuterClass.Matcher getMatcher() {
      return matcher_ == null ? object_detection.protos.MatcherOuterClass.Matcher.getDefaultInstance() : matcher_;
    }
    /**
     * <pre>
     * Matcher to match groundtruth with anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
     */
    public object_detection.protos.MatcherOuterClass.MatcherOrBuilder getMatcherOrBuilder() {
      return matcher_ == null ? object_detection.protos.MatcherOuterClass.Matcher.getDefaultInstance() : matcher_;
    }

    public static final int SIMILARITY_CALCULATOR_FIELD_NUMBER = 6;
    private object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator similarityCalculator_;
    /**
     * <pre>
     * Region similarity calculator to compute similarity of boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
     */
    public boolean hasSimilarityCalculator() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Region similarity calculator to compute similarity of boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
     */
    public object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator getSimilarityCalculator() {
      return similarityCalculator_ == null ? object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.getDefaultInstance() : similarityCalculator_;
    }
    /**
     * <pre>
     * Region similarity calculator to compute similarity of boxes.
     * </pre>
     *
     * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
     */
    public object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculatorOrBuilder getSimilarityCalculatorOrBuilder() {
      return similarityCalculator_ == null ? object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.getDefaultInstance() : similarityCalculator_;
    }

    public static final int ENCODE_BACKGROUND_AS_ZEROS_FIELD_NUMBER = 12;
    private boolean encodeBackgroundAsZeros_;
    /**
     * <pre>
     * Whether background targets are to be encoded as an all
     * zeros vector or a one-hot vector (where background is the 0th class).
     * </pre>
     *
     * <code>optional bool encode_background_as_zeros = 12 [default = false];</code>
     */
    public boolean hasEncodeBackgroundAsZeros() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Whether background targets are to be encoded as an all
     * zeros vector or a one-hot vector (where background is the 0th class).
     * </pre>
     *
     * <code>optional bool encode_background_as_zeros = 12 [default = false];</code>
     */
    public boolean getEncodeBackgroundAsZeros() {
      return encodeBackgroundAsZeros_;
    }

    public static final int NEGATIVE_CLASS_WEIGHT_FIELD_NUMBER = 13;
    private float negativeClassWeight_;
    /**
     * <pre>
     * classification weight to be associated to negative
     * anchors (default: 1.0). The weight must be in [0., 1.].
     * </pre>
     *
     * <code>optional float negative_class_weight = 13 [default = 1];</code>
     */
    public boolean hasNegativeClassWeight() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * classification weight to be associated to negative
     * anchors (default: 1.0). The weight must be in [0., 1.].
     * </pre>
     *
     * <code>optional float negative_class_weight = 13 [default = 1];</code>
     */
    public float getNegativeClassWeight() {
      return negativeClassWeight_;
    }

    public static final int BOX_PREDICTOR_FIELD_NUMBER = 7;
    private object_detection.protos.BoxPredictorOuterClass.BoxPredictor boxPredictor_;
    /**
     * <pre>
     * Box predictor to attach to the features.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
     */
    public boolean hasBoxPredictor() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Box predictor to attach to the features.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
     */
    public object_detection.protos.BoxPredictorOuterClass.BoxPredictor getBoxPredictor() {
      return boxPredictor_ == null ? object_detection.protos.BoxPredictorOuterClass.BoxPredictor.getDefaultInstance() : boxPredictor_;
    }
    /**
     * <pre>
     * Box predictor to attach to the features.
     * </pre>
     *
     * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
     */
    public object_detection.protos.BoxPredictorOuterClass.BoxPredictorOrBuilder getBoxPredictorOrBuilder() {
      return boxPredictor_ == null ? object_detection.protos.BoxPredictorOuterClass.BoxPredictor.getDefaultInstance() : boxPredictor_;
    }

    public static final int ANCHOR_GENERATOR_FIELD_NUMBER = 8;
    private object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator anchorGenerator_;
    /**
     * <pre>
     * Anchor generator to compute anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
     */
    public boolean hasAnchorGenerator() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * Anchor generator to compute anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
     */
    public object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator getAnchorGenerator() {
      return anchorGenerator_ == null ? object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.getDefaultInstance() : anchorGenerator_;
    }
    /**
     * <pre>
     * Anchor generator to compute anchors.
     * </pre>
     *
     * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
     */
    public object_detection.protos.AnchorGeneratorOuterClass.AnchorGeneratorOrBuilder getAnchorGeneratorOrBuilder() {
      return anchorGenerator_ == null ? object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.getDefaultInstance() : anchorGenerator_;
    }

    public static final int POST_PROCESSING_FIELD_NUMBER = 9;
    private object_detection.protos.PostProcessingOuterClass.PostProcessing postProcessing_;
    /**
     * <pre>
     * Post processing to apply on the predictions.
     * </pre>
     *
     * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
     */
    public boolean hasPostProcessing() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * Post processing to apply on the predictions.
     * </pre>
     *
     * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
     */
    public object_detection.protos.PostProcessingOuterClass.PostProcessing getPostProcessing() {
      return postProcessing_ == null ? object_detection.protos.PostProcessingOuterClass.PostProcessing.getDefaultInstance() : postProcessing_;
    }
    /**
     * <pre>
     * Post processing to apply on the predictions.
     * </pre>
     *
     * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
     */
    public object_detection.protos.PostProcessingOuterClass.PostProcessingOrBuilder getPostProcessingOrBuilder() {
      return postProcessing_ == null ? object_detection.protos.PostProcessingOuterClass.PostProcessing.getDefaultInstance() : postProcessing_;
    }

    public static final int NORMALIZE_LOSS_BY_NUM_MATCHES_FIELD_NUMBER = 10;
    private boolean normalizeLossByNumMatches_;
    /**
     * <pre>
     * Whether to normalize the loss by number of groundtruth boxes that match to
     * the anchors.
     * </pre>
     *
     * <code>optional bool normalize_loss_by_num_matches = 10 [default = true];</code>
     */
    public boolean hasNormalizeLossByNumMatches() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * Whether to normalize the loss by number of groundtruth boxes that match to
     * the anchors.
     * </pre>
     *
     * <code>optional bool normalize_loss_by_num_matches = 10 [default = true];</code>
     */
    public boolean getNormalizeLossByNumMatches() {
      return normalizeLossByNumMatches_;
    }

    public static final int NORMALIZE_LOC_LOSS_BY_CODESIZE_FIELD_NUMBER = 14;
    private boolean normalizeLocLossByCodesize_;
    /**
     * <pre>
     * Whether to normalize the localization loss by the code size of the box
     * encodings. This is applied along with other normalization factors.
     * </pre>
     *
     * <code>optional bool normalize_loc_loss_by_codesize = 14 [default = false];</code>
     */
    public boolean hasNormalizeLocLossByCodesize() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     * Whether to normalize the localization loss by the code size of the box
     * encodings. This is applied along with other normalization factors.
     * </pre>
     *
     * <code>optional bool normalize_loc_loss_by_codesize = 14 [default = false];</code>
     */
    public boolean getNormalizeLocLossByCodesize() {
      return normalizeLocLossByCodesize_;
    }

    public static final int LOSS_FIELD_NUMBER = 11;
    private object_detection.protos.Losses.Loss loss_;
    /**
     * <pre>
     * Loss configuration for training.
     * </pre>
     *
     * <code>optional .object_detection.protos.Loss loss = 11;</code>
     */
    public boolean hasLoss() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     * Loss configuration for training.
     * </pre>
     *
     * <code>optional .object_detection.protos.Loss loss = 11;</code>
     */
    public object_detection.protos.Losses.Loss getLoss() {
      return loss_ == null ? object_detection.protos.Losses.Loss.getDefaultInstance() : loss_;
    }
    /**
     * <pre>
     * Loss configuration for training.
     * </pre>
     *
     * <code>optional .object_detection.protos.Loss loss = 11;</code>
     */
    public object_detection.protos.Losses.LossOrBuilder getLossOrBuilder() {
      return loss_ == null ? object_detection.protos.Losses.Loss.getDefaultInstance() : loss_;
    }

    public static final int FREEZE_BATCHNORM_FIELD_NUMBER = 16;
    private boolean freezeBatchnorm_;
    /**
     * <pre>
     * Whether to update batch norm parameters during training or not.
     * When training with a relative small batch size (e.g. 1), it is
     * desirable to disable batch norm update and use pretrained batch norm
     * params.
     * Note: Some feature extractors are used with canned arg_scopes
     * (e.g resnet arg scopes).  In these cases training behavior of batch norm
     * variables may depend on both values of `batch_norm_trainable` and
     * `is_training`.
     * When canned arg_scopes are used with feature extractors `conv_hyperparams`
     * will apply only to the additional layers that are added and are outside the
     * canned arg_scope.
     * </pre>
     *
     * <code>optional bool freeze_batchnorm = 16 [default = false];</code>
     */
    public boolean hasFreezeBatchnorm() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     * Whether to update batch norm parameters during training or not.
     * When training with a relative small batch size (e.g. 1), it is
     * desirable to disable batch norm update and use pretrained batch norm
     * params.
     * Note: Some feature extractors are used with canned arg_scopes
     * (e.g resnet arg scopes).  In these cases training behavior of batch norm
     * variables may depend on both values of `batch_norm_trainable` and
     * `is_training`.
     * When canned arg_scopes are used with feature extractors `conv_hyperparams`
     * will apply only to the additional layers that are added and are outside the
     * canned arg_scope.
     * </pre>
     *
     * <code>optional bool freeze_batchnorm = 16 [default = false];</code>
     */
    public boolean getFreezeBatchnorm() {
      return freezeBatchnorm_;
    }

    public static final int INPLACE_BATCHNORM_UPDATE_FIELD_NUMBER = 15;
    private boolean inplaceBatchnormUpdate_;
    /**
     * <pre>
     * Whether to update batch_norm inplace during training. This is required
     * for batch norm to work correctly on TPUs. When this is false, user must add
     * a control dependency on tf.GraphKeys.UPDATE_OPS for train/loss op in order
     * to update the batch norm moving average parameters.
     * </pre>
     *
     * <code>optional bool inplace_batchnorm_update = 15 [default = false];</code>
     */
    public boolean hasInplaceBatchnormUpdate() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     * Whether to update batch_norm inplace during training. This is required
     * for batch norm to work correctly on TPUs. When this is false, user must add
     * a control dependency on tf.GraphKeys.UPDATE_OPS for train/loss op in order
     * to update the batch norm moving average parameters.
     * </pre>
     *
     * <code>optional bool inplace_batchnorm_update = 15 [default = false];</code>
     */
    public boolean getInplaceBatchnormUpdate() {
      return inplaceBatchnormUpdate_;
    }

    public static final int WEIGHT_REGRESSION_LOSS_BY_SCORE_FIELD_NUMBER = 17;
    private boolean weightRegressionLossByScore_;
    /**
     * <pre>
     * Whether to weight the regression loss by the score of the ground truth box
     * the anchor matches to.
     * </pre>
     *
     * <code>optional bool weight_regression_loss_by_score = 17 [default = false];</code>
     */
    public boolean hasWeightRegressionLossByScore() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     * Whether to weight the regression loss by the score of the ground truth box
     * the anchor matches to.
     * </pre>
     *
     * <code>optional bool weight_regression_loss_by_score = 17 [default = false];</code>
     */
    public boolean getWeightRegressionLossByScore() {
      return weightRegressionLossByScore_;
    }

    public static final int USE_EXPECTED_CLASSIFICATION_LOSS_UNDER_SAMPLING_FIELD_NUMBER = 18;
    private boolean useExpectedClassificationLossUnderSampling_;
    /**
     * <pre>
     * Whether to compute expected loss with respect to balanced positive/negative
     * sampling scheme. If false, use explicit sampling.
     * </pre>
     *
     * <code>optional bool use_expected_classification_loss_under_sampling = 18 [default = false];</code>
     */
    public boolean hasUseExpectedClassificationLossUnderSampling() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     * Whether to compute expected loss with respect to balanced positive/negative
     * sampling scheme. If false, use explicit sampling.
     * </pre>
     *
     * <code>optional bool use_expected_classification_loss_under_sampling = 18 [default = false];</code>
     */
    public boolean getUseExpectedClassificationLossUnderSampling() {
      return useExpectedClassificationLossUnderSampling_;
    }

    public static final int MINIMUM_NEGATIVE_SAMPLING_FIELD_NUMBER = 19;
    private float minimumNegativeSampling_;
    /**
     * <pre>
     * Minimum number of effective negative samples.
     * Only applies if use_expected_classification_loss_under_sampling is true.
     * </pre>
     *
     * <code>optional float minimum_negative_sampling = 19 [default = 0];</code>
     */
    public boolean hasMinimumNegativeSampling() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     * Minimum number of effective negative samples.
     * Only applies if use_expected_classification_loss_under_sampling is true.
     * </pre>
     *
     * <code>optional float minimum_negative_sampling = 19 [default = 0];</code>
     */
    public float getMinimumNegativeSampling() {
      return minimumNegativeSampling_;
    }

    public static final int DESIRED_NEGATIVE_SAMPLING_RATIO_FIELD_NUMBER = 20;
    private float desiredNegativeSamplingRatio_;
    /**
     * <pre>
     * Desired number of effective negative samples per positive sample.
     * Only applies if use_expected_classification_loss_under_sampling is true.
     * </pre>
     *
     * <code>optional float desired_negative_sampling_ratio = 20 [default = 3];</code>
     */
    public boolean hasDesiredNegativeSamplingRatio() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     * Desired number of effective negative samples per positive sample.
     * Only applies if use_expected_classification_loss_under_sampling is true.
     * </pre>
     *
     * <code>optional float desired_negative_sampling_ratio = 20 [default = 3];</code>
     */
    public float getDesiredNegativeSamplingRatio() {
      return desiredNegativeSamplingRatio_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, numClasses_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getImageResizer());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getFeatureExtractor());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getBoxCoder());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getMatcher());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getSimilarityCalculator());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(7, getBoxPredictor());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(8, getAnchorGenerator());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(9, getPostProcessing());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(10, normalizeLossByNumMatches_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(11, getLoss());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(12, encodeBackgroundAsZeros_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(13, negativeClassWeight_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(14, normalizeLocLossByCodesize_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(15, inplaceBatchnormUpdate_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(16, freezeBatchnorm_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(17, weightRegressionLossByScore_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(18, useExpectedClassificationLossUnderSampling_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(19, minimumNegativeSampling_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeFloat(20, desiredNegativeSamplingRatio_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, numClasses_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImageResizer());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFeatureExtractor());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBoxCoder());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMatcher());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSimilarityCalculator());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getBoxPredictor());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getAnchorGenerator());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getPostProcessing());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, normalizeLossByNumMatches_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getLoss());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, encodeBackgroundAsZeros_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, negativeClassWeight_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, normalizeLocLossByCodesize_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, inplaceBatchnormUpdate_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, freezeBatchnorm_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, weightRegressionLossByScore_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, useExpectedClassificationLossUnderSampling_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, minimumNegativeSampling_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(20, desiredNegativeSamplingRatio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.SsdOuterClass.Ssd)) {
        return super.equals(obj);
      }
      object_detection.protos.SsdOuterClass.Ssd other = (object_detection.protos.SsdOuterClass.Ssd) obj;

      boolean result = true;
      result = result && (hasNumClasses() == other.hasNumClasses());
      if (hasNumClasses()) {
        result = result && (getNumClasses()
            == other.getNumClasses());
      }
      result = result && (hasImageResizer() == other.hasImageResizer());
      if (hasImageResizer()) {
        result = result && getImageResizer()
            .equals(other.getImageResizer());
      }
      result = result && (hasFeatureExtractor() == other.hasFeatureExtractor());
      if (hasFeatureExtractor()) {
        result = result && getFeatureExtractor()
            .equals(other.getFeatureExtractor());
      }
      result = result && (hasBoxCoder() == other.hasBoxCoder());
      if (hasBoxCoder()) {
        result = result && getBoxCoder()
            .equals(other.getBoxCoder());
      }
      result = result && (hasMatcher() == other.hasMatcher());
      if (hasMatcher()) {
        result = result && getMatcher()
            .equals(other.getMatcher());
      }
      result = result && (hasSimilarityCalculator() == other.hasSimilarityCalculator());
      if (hasSimilarityCalculator()) {
        result = result && getSimilarityCalculator()
            .equals(other.getSimilarityCalculator());
      }
      result = result && (hasEncodeBackgroundAsZeros() == other.hasEncodeBackgroundAsZeros());
      if (hasEncodeBackgroundAsZeros()) {
        result = result && (getEncodeBackgroundAsZeros()
            == other.getEncodeBackgroundAsZeros());
      }
      result = result && (hasNegativeClassWeight() == other.hasNegativeClassWeight());
      if (hasNegativeClassWeight()) {
        result = result && (
            java.lang.Float.floatToIntBits(getNegativeClassWeight())
            == java.lang.Float.floatToIntBits(
                other.getNegativeClassWeight()));
      }
      result = result && (hasBoxPredictor() == other.hasBoxPredictor());
      if (hasBoxPredictor()) {
        result = result && getBoxPredictor()
            .equals(other.getBoxPredictor());
      }
      result = result && (hasAnchorGenerator() == other.hasAnchorGenerator());
      if (hasAnchorGenerator()) {
        result = result && getAnchorGenerator()
            .equals(other.getAnchorGenerator());
      }
      result = result && (hasPostProcessing() == other.hasPostProcessing());
      if (hasPostProcessing()) {
        result = result && getPostProcessing()
            .equals(other.getPostProcessing());
      }
      result = result && (hasNormalizeLossByNumMatches() == other.hasNormalizeLossByNumMatches());
      if (hasNormalizeLossByNumMatches()) {
        result = result && (getNormalizeLossByNumMatches()
            == other.getNormalizeLossByNumMatches());
      }
      result = result && (hasNormalizeLocLossByCodesize() == other.hasNormalizeLocLossByCodesize());
      if (hasNormalizeLocLossByCodesize()) {
        result = result && (getNormalizeLocLossByCodesize()
            == other.getNormalizeLocLossByCodesize());
      }
      result = result && (hasLoss() == other.hasLoss());
      if (hasLoss()) {
        result = result && getLoss()
            .equals(other.getLoss());
      }
      result = result && (hasFreezeBatchnorm() == other.hasFreezeBatchnorm());
      if (hasFreezeBatchnorm()) {
        result = result && (getFreezeBatchnorm()
            == other.getFreezeBatchnorm());
      }
      result = result && (hasInplaceBatchnormUpdate() == other.hasInplaceBatchnormUpdate());
      if (hasInplaceBatchnormUpdate()) {
        result = result && (getInplaceBatchnormUpdate()
            == other.getInplaceBatchnormUpdate());
      }
      result = result && (hasWeightRegressionLossByScore() == other.hasWeightRegressionLossByScore());
      if (hasWeightRegressionLossByScore()) {
        result = result && (getWeightRegressionLossByScore()
            == other.getWeightRegressionLossByScore());
      }
      result = result && (hasUseExpectedClassificationLossUnderSampling() == other.hasUseExpectedClassificationLossUnderSampling());
      if (hasUseExpectedClassificationLossUnderSampling()) {
        result = result && (getUseExpectedClassificationLossUnderSampling()
            == other.getUseExpectedClassificationLossUnderSampling());
      }
      result = result && (hasMinimumNegativeSampling() == other.hasMinimumNegativeSampling());
      if (hasMinimumNegativeSampling()) {
        result = result && (
            java.lang.Float.floatToIntBits(getMinimumNegativeSampling())
            == java.lang.Float.floatToIntBits(
                other.getMinimumNegativeSampling()));
      }
      result = result && (hasDesiredNegativeSamplingRatio() == other.hasDesiredNegativeSamplingRatio());
      if (hasDesiredNegativeSamplingRatio()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDesiredNegativeSamplingRatio())
            == java.lang.Float.floatToIntBits(
                other.getDesiredNegativeSamplingRatio()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNumClasses()) {
        hash = (37 * hash) + NUM_CLASSES_FIELD_NUMBER;
        hash = (53 * hash) + getNumClasses();
      }
      if (hasImageResizer()) {
        hash = (37 * hash) + IMAGE_RESIZER_FIELD_NUMBER;
        hash = (53 * hash) + getImageResizer().hashCode();
      }
      if (hasFeatureExtractor()) {
        hash = (37 * hash) + FEATURE_EXTRACTOR_FIELD_NUMBER;
        hash = (53 * hash) + getFeatureExtractor().hashCode();
      }
      if (hasBoxCoder()) {
        hash = (37 * hash) + BOX_CODER_FIELD_NUMBER;
        hash = (53 * hash) + getBoxCoder().hashCode();
      }
      if (hasMatcher()) {
        hash = (37 * hash) + MATCHER_FIELD_NUMBER;
        hash = (53 * hash) + getMatcher().hashCode();
      }
      if (hasSimilarityCalculator()) {
        hash = (37 * hash) + SIMILARITY_CALCULATOR_FIELD_NUMBER;
        hash = (53 * hash) + getSimilarityCalculator().hashCode();
      }
      if (hasEncodeBackgroundAsZeros()) {
        hash = (37 * hash) + ENCODE_BACKGROUND_AS_ZEROS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEncodeBackgroundAsZeros());
      }
      if (hasNegativeClassWeight()) {
        hash = (37 * hash) + NEGATIVE_CLASS_WEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getNegativeClassWeight());
      }
      if (hasBoxPredictor()) {
        hash = (37 * hash) + BOX_PREDICTOR_FIELD_NUMBER;
        hash = (53 * hash) + getBoxPredictor().hashCode();
      }
      if (hasAnchorGenerator()) {
        hash = (37 * hash) + ANCHOR_GENERATOR_FIELD_NUMBER;
        hash = (53 * hash) + getAnchorGenerator().hashCode();
      }
      if (hasPostProcessing()) {
        hash = (37 * hash) + POST_PROCESSING_FIELD_NUMBER;
        hash = (53 * hash) + getPostProcessing().hashCode();
      }
      if (hasNormalizeLossByNumMatches()) {
        hash = (37 * hash) + NORMALIZE_LOSS_BY_NUM_MATCHES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getNormalizeLossByNumMatches());
      }
      if (hasNormalizeLocLossByCodesize()) {
        hash = (37 * hash) + NORMALIZE_LOC_LOSS_BY_CODESIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getNormalizeLocLossByCodesize());
      }
      if (hasLoss()) {
        hash = (37 * hash) + LOSS_FIELD_NUMBER;
        hash = (53 * hash) + getLoss().hashCode();
      }
      if (hasFreezeBatchnorm()) {
        hash = (37 * hash) + FREEZE_BATCHNORM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFreezeBatchnorm());
      }
      if (hasInplaceBatchnormUpdate()) {
        hash = (37 * hash) + INPLACE_BATCHNORM_UPDATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getInplaceBatchnormUpdate());
      }
      if (hasWeightRegressionLossByScore()) {
        hash = (37 * hash) + WEIGHT_REGRESSION_LOSS_BY_SCORE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getWeightRegressionLossByScore());
      }
      if (hasUseExpectedClassificationLossUnderSampling()) {
        hash = (37 * hash) + USE_EXPECTED_CLASSIFICATION_LOSS_UNDER_SAMPLING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUseExpectedClassificationLossUnderSampling());
      }
      if (hasMinimumNegativeSampling()) {
        hash = (37 * hash) + MINIMUM_NEGATIVE_SAMPLING_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinimumNegativeSampling());
      }
      if (hasDesiredNegativeSamplingRatio()) {
        hash = (37 * hash) + DESIRED_NEGATIVE_SAMPLING_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDesiredNegativeSamplingRatio());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdOuterClass.Ssd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.SsdOuterClass.Ssd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configuration for Single Shot Detection (SSD) models.
     * Next id: 21
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.Ssd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.Ssd)
        object_detection.protos.SsdOuterClass.SsdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_Ssd_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_Ssd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.SsdOuterClass.Ssd.class, object_detection.protos.SsdOuterClass.Ssd.Builder.class);
      }

      // Construct using object_detection.protos.SsdOuterClass.Ssd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getImageResizerFieldBuilder();
          getFeatureExtractorFieldBuilder();
          getBoxCoderFieldBuilder();
          getMatcherFieldBuilder();
          getSimilarityCalculatorFieldBuilder();
          getBoxPredictorFieldBuilder();
          getAnchorGeneratorFieldBuilder();
          getPostProcessingFieldBuilder();
          getLossFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        numClasses_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (imageResizerBuilder_ == null) {
          imageResizer_ = null;
        } else {
          imageResizerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (featureExtractorBuilder_ == null) {
          featureExtractor_ = null;
        } else {
          featureExtractorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (boxCoderBuilder_ == null) {
          boxCoder_ = null;
        } else {
          boxCoderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (matcherBuilder_ == null) {
          matcher_ = null;
        } else {
          matcherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (similarityCalculatorBuilder_ == null) {
          similarityCalculator_ = null;
        } else {
          similarityCalculatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        encodeBackgroundAsZeros_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        negativeClassWeight_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (boxPredictorBuilder_ == null) {
          boxPredictor_ = null;
        } else {
          boxPredictorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (anchorGeneratorBuilder_ == null) {
          anchorGenerator_ = null;
        } else {
          anchorGeneratorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (postProcessingBuilder_ == null) {
          postProcessing_ = null;
        } else {
          postProcessingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        normalizeLossByNumMatches_ = true;
        bitField0_ = (bitField0_ & ~0x00000800);
        normalizeLocLossByCodesize_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (lossBuilder_ == null) {
          loss_ = null;
        } else {
          lossBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        freezeBatchnorm_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        inplaceBatchnormUpdate_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        weightRegressionLossByScore_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        useExpectedClassificationLossUnderSampling_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        minimumNegativeSampling_ = 0F;
        bitField0_ = (bitField0_ & ~0x00040000);
        desiredNegativeSamplingRatio_ = 3F;
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_Ssd_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.SsdOuterClass.Ssd getDefaultInstanceForType() {
        return object_detection.protos.SsdOuterClass.Ssd.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.SsdOuterClass.Ssd build() {
        object_detection.protos.SsdOuterClass.Ssd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.SsdOuterClass.Ssd buildPartial() {
        object_detection.protos.SsdOuterClass.Ssd result = new object_detection.protos.SsdOuterClass.Ssd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.numClasses_ = numClasses_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (imageResizerBuilder_ == null) {
          result.imageResizer_ = imageResizer_;
        } else {
          result.imageResizer_ = imageResizerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (featureExtractorBuilder_ == null) {
          result.featureExtractor_ = featureExtractor_;
        } else {
          result.featureExtractor_ = featureExtractorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (boxCoderBuilder_ == null) {
          result.boxCoder_ = boxCoder_;
        } else {
          result.boxCoder_ = boxCoderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (matcherBuilder_ == null) {
          result.matcher_ = matcher_;
        } else {
          result.matcher_ = matcherBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (similarityCalculatorBuilder_ == null) {
          result.similarityCalculator_ = similarityCalculator_;
        } else {
          result.similarityCalculator_ = similarityCalculatorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.encodeBackgroundAsZeros_ = encodeBackgroundAsZeros_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.negativeClassWeight_ = negativeClassWeight_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (boxPredictorBuilder_ == null) {
          result.boxPredictor_ = boxPredictor_;
        } else {
          result.boxPredictor_ = boxPredictorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (anchorGeneratorBuilder_ == null) {
          result.anchorGenerator_ = anchorGenerator_;
        } else {
          result.anchorGenerator_ = anchorGeneratorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (postProcessingBuilder_ == null) {
          result.postProcessing_ = postProcessing_;
        } else {
          result.postProcessing_ = postProcessingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.normalizeLossByNumMatches_ = normalizeLossByNumMatches_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.normalizeLocLossByCodesize_ = normalizeLocLossByCodesize_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (lossBuilder_ == null) {
          result.loss_ = loss_;
        } else {
          result.loss_ = lossBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.freezeBatchnorm_ = freezeBatchnorm_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.inplaceBatchnormUpdate_ = inplaceBatchnormUpdate_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.weightRegressionLossByScore_ = weightRegressionLossByScore_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.useExpectedClassificationLossUnderSampling_ = useExpectedClassificationLossUnderSampling_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.minimumNegativeSampling_ = minimumNegativeSampling_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.desiredNegativeSamplingRatio_ = desiredNegativeSamplingRatio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.SsdOuterClass.Ssd) {
          return mergeFrom((object_detection.protos.SsdOuterClass.Ssd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.SsdOuterClass.Ssd other) {
        if (other == object_detection.protos.SsdOuterClass.Ssd.getDefaultInstance()) return this;
        if (other.hasNumClasses()) {
          setNumClasses(other.getNumClasses());
        }
        if (other.hasImageResizer()) {
          mergeImageResizer(other.getImageResizer());
        }
        if (other.hasFeatureExtractor()) {
          mergeFeatureExtractor(other.getFeatureExtractor());
        }
        if (other.hasBoxCoder()) {
          mergeBoxCoder(other.getBoxCoder());
        }
        if (other.hasMatcher()) {
          mergeMatcher(other.getMatcher());
        }
        if (other.hasSimilarityCalculator()) {
          mergeSimilarityCalculator(other.getSimilarityCalculator());
        }
        if (other.hasEncodeBackgroundAsZeros()) {
          setEncodeBackgroundAsZeros(other.getEncodeBackgroundAsZeros());
        }
        if (other.hasNegativeClassWeight()) {
          setNegativeClassWeight(other.getNegativeClassWeight());
        }
        if (other.hasBoxPredictor()) {
          mergeBoxPredictor(other.getBoxPredictor());
        }
        if (other.hasAnchorGenerator()) {
          mergeAnchorGenerator(other.getAnchorGenerator());
        }
        if (other.hasPostProcessing()) {
          mergePostProcessing(other.getPostProcessing());
        }
        if (other.hasNormalizeLossByNumMatches()) {
          setNormalizeLossByNumMatches(other.getNormalizeLossByNumMatches());
        }
        if (other.hasNormalizeLocLossByCodesize()) {
          setNormalizeLocLossByCodesize(other.getNormalizeLocLossByCodesize());
        }
        if (other.hasLoss()) {
          mergeLoss(other.getLoss());
        }
        if (other.hasFreezeBatchnorm()) {
          setFreezeBatchnorm(other.getFreezeBatchnorm());
        }
        if (other.hasInplaceBatchnormUpdate()) {
          setInplaceBatchnormUpdate(other.getInplaceBatchnormUpdate());
        }
        if (other.hasWeightRegressionLossByScore()) {
          setWeightRegressionLossByScore(other.getWeightRegressionLossByScore());
        }
        if (other.hasUseExpectedClassificationLossUnderSampling()) {
          setUseExpectedClassificationLossUnderSampling(other.getUseExpectedClassificationLossUnderSampling());
        }
        if (other.hasMinimumNegativeSampling()) {
          setMinimumNegativeSampling(other.getMinimumNegativeSampling());
        }
        if (other.hasDesiredNegativeSamplingRatio()) {
          setDesiredNegativeSamplingRatio(other.getDesiredNegativeSamplingRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.SsdOuterClass.Ssd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.SsdOuterClass.Ssd) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int numClasses_ ;
      /**
       * <pre>
       * Number of classes to predict.
       * </pre>
       *
       * <code>optional int32 num_classes = 1;</code>
       */
      public boolean hasNumClasses() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Number of classes to predict.
       * </pre>
       *
       * <code>optional int32 num_classes = 1;</code>
       */
      public int getNumClasses() {
        return numClasses_;
      }
      /**
       * <pre>
       * Number of classes to predict.
       * </pre>
       *
       * <code>optional int32 num_classes = 1;</code>
       */
      public Builder setNumClasses(int value) {
        bitField0_ |= 0x00000001;
        numClasses_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of classes to predict.
       * </pre>
       *
       * <code>optional int32 num_classes = 1;</code>
       */
      public Builder clearNumClasses() {
        bitField0_ = (bitField0_ & ~0x00000001);
        numClasses_ = 0;
        onChanged();
        return this;
      }

      private object_detection.protos.ImageResizerOuterClass.ImageResizer imageResizer_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.ImageResizerOuterClass.ImageResizer, object_detection.protos.ImageResizerOuterClass.ImageResizer.Builder, object_detection.protos.ImageResizerOuterClass.ImageResizerOrBuilder> imageResizerBuilder_;
      /**
       * <pre>
       * Image resizer for preprocessing the input image.
       * </pre>
       *
       * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
       */
      public boolean hasImageResizer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Image resizer for preprocessing the input image.
       * </pre>
       *
       * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
       */
      public object_detection.protos.ImageResizerOuterClass.ImageResizer getImageResizer() {
        if (imageResizerBuilder_ == null) {
          return imageResizer_ == null ? object_detection.protos.ImageResizerOuterClass.ImageResizer.getDefaultInstance() : imageResizer_;
        } else {
          return imageResizerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Image resizer for preprocessing the input image.
       * </pre>
       *
       * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
       */
      public Builder setImageResizer(object_detection.protos.ImageResizerOuterClass.ImageResizer value) {
        if (imageResizerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          imageResizer_ = value;
          onChanged();
        } else {
          imageResizerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Image resizer for preprocessing the input image.
       * </pre>
       *
       * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
       */
      public Builder setImageResizer(
          object_detection.protos.ImageResizerOuterClass.ImageResizer.Builder builderForValue) {
        if (imageResizerBuilder_ == null) {
          imageResizer_ = builderForValue.build();
          onChanged();
        } else {
          imageResizerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Image resizer for preprocessing the input image.
       * </pre>
       *
       * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
       */
      public Builder mergeImageResizer(object_detection.protos.ImageResizerOuterClass.ImageResizer value) {
        if (imageResizerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              imageResizer_ != null &&
              imageResizer_ != object_detection.protos.ImageResizerOuterClass.ImageResizer.getDefaultInstance()) {
            imageResizer_ =
              object_detection.protos.ImageResizerOuterClass.ImageResizer.newBuilder(imageResizer_).mergeFrom(value).buildPartial();
          } else {
            imageResizer_ = value;
          }
          onChanged();
        } else {
          imageResizerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Image resizer for preprocessing the input image.
       * </pre>
       *
       * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
       */
      public Builder clearImageResizer() {
        if (imageResizerBuilder_ == null) {
          imageResizer_ = null;
          onChanged();
        } else {
          imageResizerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Image resizer for preprocessing the input image.
       * </pre>
       *
       * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
       */
      public object_detection.protos.ImageResizerOuterClass.ImageResizer.Builder getImageResizerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getImageResizerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Image resizer for preprocessing the input image.
       * </pre>
       *
       * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
       */
      public object_detection.protos.ImageResizerOuterClass.ImageResizerOrBuilder getImageResizerOrBuilder() {
        if (imageResizerBuilder_ != null) {
          return imageResizerBuilder_.getMessageOrBuilder();
        } else {
          return imageResizer_ == null ?
              object_detection.protos.ImageResizerOuterClass.ImageResizer.getDefaultInstance() : imageResizer_;
        }
      }
      /**
       * <pre>
       * Image resizer for preprocessing the input image.
       * </pre>
       *
       * <code>optional .object_detection.protos.ImageResizer image_resizer = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.ImageResizerOuterClass.ImageResizer, object_detection.protos.ImageResizerOuterClass.ImageResizer.Builder, object_detection.protos.ImageResizerOuterClass.ImageResizerOrBuilder> 
          getImageResizerFieldBuilder() {
        if (imageResizerBuilder_ == null) {
          imageResizerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.ImageResizerOuterClass.ImageResizer, object_detection.protos.ImageResizerOuterClass.ImageResizer.Builder, object_detection.protos.ImageResizerOuterClass.ImageResizerOrBuilder>(
                  getImageResizer(),
                  getParentForChildren(),
                  isClean());
          imageResizer_ = null;
        }
        return imageResizerBuilder_;
      }

      private object_detection.protos.SsdOuterClass.SsdFeatureExtractor featureExtractor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.SsdOuterClass.SsdFeatureExtractor, object_detection.protos.SsdOuterClass.SsdFeatureExtractor.Builder, object_detection.protos.SsdOuterClass.SsdFeatureExtractorOrBuilder> featureExtractorBuilder_;
      /**
       * <pre>
       * Feature extractor config.
       * </pre>
       *
       * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
       */
      public boolean hasFeatureExtractor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Feature extractor config.
       * </pre>
       *
       * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
       */
      public object_detection.protos.SsdOuterClass.SsdFeatureExtractor getFeatureExtractor() {
        if (featureExtractorBuilder_ == null) {
          return featureExtractor_ == null ? object_detection.protos.SsdOuterClass.SsdFeatureExtractor.getDefaultInstance() : featureExtractor_;
        } else {
          return featureExtractorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Feature extractor config.
       * </pre>
       *
       * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
       */
      public Builder setFeatureExtractor(object_detection.protos.SsdOuterClass.SsdFeatureExtractor value) {
        if (featureExtractorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          featureExtractor_ = value;
          onChanged();
        } else {
          featureExtractorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Feature extractor config.
       * </pre>
       *
       * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
       */
      public Builder setFeatureExtractor(
          object_detection.protos.SsdOuterClass.SsdFeatureExtractor.Builder builderForValue) {
        if (featureExtractorBuilder_ == null) {
          featureExtractor_ = builderForValue.build();
          onChanged();
        } else {
          featureExtractorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Feature extractor config.
       * </pre>
       *
       * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
       */
      public Builder mergeFeatureExtractor(object_detection.protos.SsdOuterClass.SsdFeatureExtractor value) {
        if (featureExtractorBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              featureExtractor_ != null &&
              featureExtractor_ != object_detection.protos.SsdOuterClass.SsdFeatureExtractor.getDefaultInstance()) {
            featureExtractor_ =
              object_detection.protos.SsdOuterClass.SsdFeatureExtractor.newBuilder(featureExtractor_).mergeFrom(value).buildPartial();
          } else {
            featureExtractor_ = value;
          }
          onChanged();
        } else {
          featureExtractorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Feature extractor config.
       * </pre>
       *
       * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
       */
      public Builder clearFeatureExtractor() {
        if (featureExtractorBuilder_ == null) {
          featureExtractor_ = null;
          onChanged();
        } else {
          featureExtractorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Feature extractor config.
       * </pre>
       *
       * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
       */
      public object_detection.protos.SsdOuterClass.SsdFeatureExtractor.Builder getFeatureExtractorBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFeatureExtractorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Feature extractor config.
       * </pre>
       *
       * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
       */
      public object_detection.protos.SsdOuterClass.SsdFeatureExtractorOrBuilder getFeatureExtractorOrBuilder() {
        if (featureExtractorBuilder_ != null) {
          return featureExtractorBuilder_.getMessageOrBuilder();
        } else {
          return featureExtractor_ == null ?
              object_detection.protos.SsdOuterClass.SsdFeatureExtractor.getDefaultInstance() : featureExtractor_;
        }
      }
      /**
       * <pre>
       * Feature extractor config.
       * </pre>
       *
       * <code>optional .object_detection.protos.SsdFeatureExtractor feature_extractor = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.SsdOuterClass.SsdFeatureExtractor, object_detection.protos.SsdOuterClass.SsdFeatureExtractor.Builder, object_detection.protos.SsdOuterClass.SsdFeatureExtractorOrBuilder> 
          getFeatureExtractorFieldBuilder() {
        if (featureExtractorBuilder_ == null) {
          featureExtractorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.SsdOuterClass.SsdFeatureExtractor, object_detection.protos.SsdOuterClass.SsdFeatureExtractor.Builder, object_detection.protos.SsdOuterClass.SsdFeatureExtractorOrBuilder>(
                  getFeatureExtractor(),
                  getParentForChildren(),
                  isClean());
          featureExtractor_ = null;
        }
        return featureExtractorBuilder_;
      }

      private object_detection.protos.BoxCoderOuterClass.BoxCoder boxCoder_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.BoxCoderOuterClass.BoxCoder, object_detection.protos.BoxCoderOuterClass.BoxCoder.Builder, object_detection.protos.BoxCoderOuterClass.BoxCoderOrBuilder> boxCoderBuilder_;
      /**
       * <pre>
       * Box coder to encode the boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
       */
      public boolean hasBoxCoder() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Box coder to encode the boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
       */
      public object_detection.protos.BoxCoderOuterClass.BoxCoder getBoxCoder() {
        if (boxCoderBuilder_ == null) {
          return boxCoder_ == null ? object_detection.protos.BoxCoderOuterClass.BoxCoder.getDefaultInstance() : boxCoder_;
        } else {
          return boxCoderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Box coder to encode the boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
       */
      public Builder setBoxCoder(object_detection.protos.BoxCoderOuterClass.BoxCoder value) {
        if (boxCoderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          boxCoder_ = value;
          onChanged();
        } else {
          boxCoderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Box coder to encode the boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
       */
      public Builder setBoxCoder(
          object_detection.protos.BoxCoderOuterClass.BoxCoder.Builder builderForValue) {
        if (boxCoderBuilder_ == null) {
          boxCoder_ = builderForValue.build();
          onChanged();
        } else {
          boxCoderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Box coder to encode the boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
       */
      public Builder mergeBoxCoder(object_detection.protos.BoxCoderOuterClass.BoxCoder value) {
        if (boxCoderBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              boxCoder_ != null &&
              boxCoder_ != object_detection.protos.BoxCoderOuterClass.BoxCoder.getDefaultInstance()) {
            boxCoder_ =
              object_detection.protos.BoxCoderOuterClass.BoxCoder.newBuilder(boxCoder_).mergeFrom(value).buildPartial();
          } else {
            boxCoder_ = value;
          }
          onChanged();
        } else {
          boxCoderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Box coder to encode the boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
       */
      public Builder clearBoxCoder() {
        if (boxCoderBuilder_ == null) {
          boxCoder_ = null;
          onChanged();
        } else {
          boxCoderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Box coder to encode the boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
       */
      public object_detection.protos.BoxCoderOuterClass.BoxCoder.Builder getBoxCoderBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getBoxCoderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Box coder to encode the boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
       */
      public object_detection.protos.BoxCoderOuterClass.BoxCoderOrBuilder getBoxCoderOrBuilder() {
        if (boxCoderBuilder_ != null) {
          return boxCoderBuilder_.getMessageOrBuilder();
        } else {
          return boxCoder_ == null ?
              object_detection.protos.BoxCoderOuterClass.BoxCoder.getDefaultInstance() : boxCoder_;
        }
      }
      /**
       * <pre>
       * Box coder to encode the boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxCoder box_coder = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.BoxCoderOuterClass.BoxCoder, object_detection.protos.BoxCoderOuterClass.BoxCoder.Builder, object_detection.protos.BoxCoderOuterClass.BoxCoderOrBuilder> 
          getBoxCoderFieldBuilder() {
        if (boxCoderBuilder_ == null) {
          boxCoderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.BoxCoderOuterClass.BoxCoder, object_detection.protos.BoxCoderOuterClass.BoxCoder.Builder, object_detection.protos.BoxCoderOuterClass.BoxCoderOrBuilder>(
                  getBoxCoder(),
                  getParentForChildren(),
                  isClean());
          boxCoder_ = null;
        }
        return boxCoderBuilder_;
      }

      private object_detection.protos.MatcherOuterClass.Matcher matcher_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.MatcherOuterClass.Matcher, object_detection.protos.MatcherOuterClass.Matcher.Builder, object_detection.protos.MatcherOuterClass.MatcherOrBuilder> matcherBuilder_;
      /**
       * <pre>
       * Matcher to match groundtruth with anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
       */
      public boolean hasMatcher() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Matcher to match groundtruth with anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
       */
      public object_detection.protos.MatcherOuterClass.Matcher getMatcher() {
        if (matcherBuilder_ == null) {
          return matcher_ == null ? object_detection.protos.MatcherOuterClass.Matcher.getDefaultInstance() : matcher_;
        } else {
          return matcherBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Matcher to match groundtruth with anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
       */
      public Builder setMatcher(object_detection.protos.MatcherOuterClass.Matcher value) {
        if (matcherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          matcher_ = value;
          onChanged();
        } else {
          matcherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Matcher to match groundtruth with anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
       */
      public Builder setMatcher(
          object_detection.protos.MatcherOuterClass.Matcher.Builder builderForValue) {
        if (matcherBuilder_ == null) {
          matcher_ = builderForValue.build();
          onChanged();
        } else {
          matcherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Matcher to match groundtruth with anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
       */
      public Builder mergeMatcher(object_detection.protos.MatcherOuterClass.Matcher value) {
        if (matcherBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              matcher_ != null &&
              matcher_ != object_detection.protos.MatcherOuterClass.Matcher.getDefaultInstance()) {
            matcher_ =
              object_detection.protos.MatcherOuterClass.Matcher.newBuilder(matcher_).mergeFrom(value).buildPartial();
          } else {
            matcher_ = value;
          }
          onChanged();
        } else {
          matcherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Matcher to match groundtruth with anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
       */
      public Builder clearMatcher() {
        if (matcherBuilder_ == null) {
          matcher_ = null;
          onChanged();
        } else {
          matcherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * Matcher to match groundtruth with anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
       */
      public object_detection.protos.MatcherOuterClass.Matcher.Builder getMatcherBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getMatcherFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Matcher to match groundtruth with anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
       */
      public object_detection.protos.MatcherOuterClass.MatcherOrBuilder getMatcherOrBuilder() {
        if (matcherBuilder_ != null) {
          return matcherBuilder_.getMessageOrBuilder();
        } else {
          return matcher_ == null ?
              object_detection.protos.MatcherOuterClass.Matcher.getDefaultInstance() : matcher_;
        }
      }
      /**
       * <pre>
       * Matcher to match groundtruth with anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.Matcher matcher = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.MatcherOuterClass.Matcher, object_detection.protos.MatcherOuterClass.Matcher.Builder, object_detection.protos.MatcherOuterClass.MatcherOrBuilder> 
          getMatcherFieldBuilder() {
        if (matcherBuilder_ == null) {
          matcherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.MatcherOuterClass.Matcher, object_detection.protos.MatcherOuterClass.Matcher.Builder, object_detection.protos.MatcherOuterClass.MatcherOrBuilder>(
                  getMatcher(),
                  getParentForChildren(),
                  isClean());
          matcher_ = null;
        }
        return matcherBuilder_;
      }

      private object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator similarityCalculator_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator, object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.Builder, object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculatorOrBuilder> similarityCalculatorBuilder_;
      /**
       * <pre>
       * Region similarity calculator to compute similarity of boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
       */
      public boolean hasSimilarityCalculator() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Region similarity calculator to compute similarity of boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
       */
      public object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator getSimilarityCalculator() {
        if (similarityCalculatorBuilder_ == null) {
          return similarityCalculator_ == null ? object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.getDefaultInstance() : similarityCalculator_;
        } else {
          return similarityCalculatorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Region similarity calculator to compute similarity of boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
       */
      public Builder setSimilarityCalculator(object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator value) {
        if (similarityCalculatorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          similarityCalculator_ = value;
          onChanged();
        } else {
          similarityCalculatorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Region similarity calculator to compute similarity of boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
       */
      public Builder setSimilarityCalculator(
          object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.Builder builderForValue) {
        if (similarityCalculatorBuilder_ == null) {
          similarityCalculator_ = builderForValue.build();
          onChanged();
        } else {
          similarityCalculatorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Region similarity calculator to compute similarity of boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
       */
      public Builder mergeSimilarityCalculator(object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator value) {
        if (similarityCalculatorBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              similarityCalculator_ != null &&
              similarityCalculator_ != object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.getDefaultInstance()) {
            similarityCalculator_ =
              object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.newBuilder(similarityCalculator_).mergeFrom(value).buildPartial();
          } else {
            similarityCalculator_ = value;
          }
          onChanged();
        } else {
          similarityCalculatorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Region similarity calculator to compute similarity of boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
       */
      public Builder clearSimilarityCalculator() {
        if (similarityCalculatorBuilder_ == null) {
          similarityCalculator_ = null;
          onChanged();
        } else {
          similarityCalculatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       * Region similarity calculator to compute similarity of boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
       */
      public object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.Builder getSimilarityCalculatorBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getSimilarityCalculatorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Region similarity calculator to compute similarity of boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
       */
      public object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculatorOrBuilder getSimilarityCalculatorOrBuilder() {
        if (similarityCalculatorBuilder_ != null) {
          return similarityCalculatorBuilder_.getMessageOrBuilder();
        } else {
          return similarityCalculator_ == null ?
              object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.getDefaultInstance() : similarityCalculator_;
        }
      }
      /**
       * <pre>
       * Region similarity calculator to compute similarity of boxes.
       * </pre>
       *
       * <code>optional .object_detection.protos.RegionSimilarityCalculator similarity_calculator = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator, object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.Builder, object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculatorOrBuilder> 
          getSimilarityCalculatorFieldBuilder() {
        if (similarityCalculatorBuilder_ == null) {
          similarityCalculatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator, object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculator.Builder, object_detection.protos.RegionSimilarityCalculatorOuterClass.RegionSimilarityCalculatorOrBuilder>(
                  getSimilarityCalculator(),
                  getParentForChildren(),
                  isClean());
          similarityCalculator_ = null;
        }
        return similarityCalculatorBuilder_;
      }

      private boolean encodeBackgroundAsZeros_ ;
      /**
       * <pre>
       * Whether background targets are to be encoded as an all
       * zeros vector or a one-hot vector (where background is the 0th class).
       * </pre>
       *
       * <code>optional bool encode_background_as_zeros = 12 [default = false];</code>
       */
      public boolean hasEncodeBackgroundAsZeros() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * Whether background targets are to be encoded as an all
       * zeros vector or a one-hot vector (where background is the 0th class).
       * </pre>
       *
       * <code>optional bool encode_background_as_zeros = 12 [default = false];</code>
       */
      public boolean getEncodeBackgroundAsZeros() {
        return encodeBackgroundAsZeros_;
      }
      /**
       * <pre>
       * Whether background targets are to be encoded as an all
       * zeros vector or a one-hot vector (where background is the 0th class).
       * </pre>
       *
       * <code>optional bool encode_background_as_zeros = 12 [default = false];</code>
       */
      public Builder setEncodeBackgroundAsZeros(boolean value) {
        bitField0_ |= 0x00000040;
        encodeBackgroundAsZeros_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether background targets are to be encoded as an all
       * zeros vector or a one-hot vector (where background is the 0th class).
       * </pre>
       *
       * <code>optional bool encode_background_as_zeros = 12 [default = false];</code>
       */
      public Builder clearEncodeBackgroundAsZeros() {
        bitField0_ = (bitField0_ & ~0x00000040);
        encodeBackgroundAsZeros_ = false;
        onChanged();
        return this;
      }

      private float negativeClassWeight_ = 1F;
      /**
       * <pre>
       * classification weight to be associated to negative
       * anchors (default: 1.0). The weight must be in [0., 1.].
       * </pre>
       *
       * <code>optional float negative_class_weight = 13 [default = 1];</code>
       */
      public boolean hasNegativeClassWeight() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * classification weight to be associated to negative
       * anchors (default: 1.0). The weight must be in [0., 1.].
       * </pre>
       *
       * <code>optional float negative_class_weight = 13 [default = 1];</code>
       */
      public float getNegativeClassWeight() {
        return negativeClassWeight_;
      }
      /**
       * <pre>
       * classification weight to be associated to negative
       * anchors (default: 1.0). The weight must be in [0., 1.].
       * </pre>
       *
       * <code>optional float negative_class_weight = 13 [default = 1];</code>
       */
      public Builder setNegativeClassWeight(float value) {
        bitField0_ |= 0x00000080;
        negativeClassWeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * classification weight to be associated to negative
       * anchors (default: 1.0). The weight must be in [0., 1.].
       * </pre>
       *
       * <code>optional float negative_class_weight = 13 [default = 1];</code>
       */
      public Builder clearNegativeClassWeight() {
        bitField0_ = (bitField0_ & ~0x00000080);
        negativeClassWeight_ = 1F;
        onChanged();
        return this;
      }

      private object_detection.protos.BoxPredictorOuterClass.BoxPredictor boxPredictor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.BoxPredictorOuterClass.BoxPredictor, object_detection.protos.BoxPredictorOuterClass.BoxPredictor.Builder, object_detection.protos.BoxPredictorOuterClass.BoxPredictorOrBuilder> boxPredictorBuilder_;
      /**
       * <pre>
       * Box predictor to attach to the features.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
       */
      public boolean hasBoxPredictor() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * Box predictor to attach to the features.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
       */
      public object_detection.protos.BoxPredictorOuterClass.BoxPredictor getBoxPredictor() {
        if (boxPredictorBuilder_ == null) {
          return boxPredictor_ == null ? object_detection.protos.BoxPredictorOuterClass.BoxPredictor.getDefaultInstance() : boxPredictor_;
        } else {
          return boxPredictorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Box predictor to attach to the features.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
       */
      public Builder setBoxPredictor(object_detection.protos.BoxPredictorOuterClass.BoxPredictor value) {
        if (boxPredictorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          boxPredictor_ = value;
          onChanged();
        } else {
          boxPredictorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Box predictor to attach to the features.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
       */
      public Builder setBoxPredictor(
          object_detection.protos.BoxPredictorOuterClass.BoxPredictor.Builder builderForValue) {
        if (boxPredictorBuilder_ == null) {
          boxPredictor_ = builderForValue.build();
          onChanged();
        } else {
          boxPredictorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Box predictor to attach to the features.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
       */
      public Builder mergeBoxPredictor(object_detection.protos.BoxPredictorOuterClass.BoxPredictor value) {
        if (boxPredictorBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              boxPredictor_ != null &&
              boxPredictor_ != object_detection.protos.BoxPredictorOuterClass.BoxPredictor.getDefaultInstance()) {
            boxPredictor_ =
              object_detection.protos.BoxPredictorOuterClass.BoxPredictor.newBuilder(boxPredictor_).mergeFrom(value).buildPartial();
          } else {
            boxPredictor_ = value;
          }
          onChanged();
        } else {
          boxPredictorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Box predictor to attach to the features.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
       */
      public Builder clearBoxPredictor() {
        if (boxPredictorBuilder_ == null) {
          boxPredictor_ = null;
          onChanged();
        } else {
          boxPredictorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <pre>
       * Box predictor to attach to the features.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
       */
      public object_detection.protos.BoxPredictorOuterClass.BoxPredictor.Builder getBoxPredictorBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getBoxPredictorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Box predictor to attach to the features.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
       */
      public object_detection.protos.BoxPredictorOuterClass.BoxPredictorOrBuilder getBoxPredictorOrBuilder() {
        if (boxPredictorBuilder_ != null) {
          return boxPredictorBuilder_.getMessageOrBuilder();
        } else {
          return boxPredictor_ == null ?
              object_detection.protos.BoxPredictorOuterClass.BoxPredictor.getDefaultInstance() : boxPredictor_;
        }
      }
      /**
       * <pre>
       * Box predictor to attach to the features.
       * </pre>
       *
       * <code>optional .object_detection.protos.BoxPredictor box_predictor = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.BoxPredictorOuterClass.BoxPredictor, object_detection.protos.BoxPredictorOuterClass.BoxPredictor.Builder, object_detection.protos.BoxPredictorOuterClass.BoxPredictorOrBuilder> 
          getBoxPredictorFieldBuilder() {
        if (boxPredictorBuilder_ == null) {
          boxPredictorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.BoxPredictorOuterClass.BoxPredictor, object_detection.protos.BoxPredictorOuterClass.BoxPredictor.Builder, object_detection.protos.BoxPredictorOuterClass.BoxPredictorOrBuilder>(
                  getBoxPredictor(),
                  getParentForChildren(),
                  isClean());
          boxPredictor_ = null;
        }
        return boxPredictorBuilder_;
      }

      private object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator anchorGenerator_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator, object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.Builder, object_detection.protos.AnchorGeneratorOuterClass.AnchorGeneratorOrBuilder> anchorGeneratorBuilder_;
      /**
       * <pre>
       * Anchor generator to compute anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
       */
      public boolean hasAnchorGenerator() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       * Anchor generator to compute anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
       */
      public object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator getAnchorGenerator() {
        if (anchorGeneratorBuilder_ == null) {
          return anchorGenerator_ == null ? object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.getDefaultInstance() : anchorGenerator_;
        } else {
          return anchorGeneratorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Anchor generator to compute anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
       */
      public Builder setAnchorGenerator(object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator value) {
        if (anchorGeneratorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          anchorGenerator_ = value;
          onChanged();
        } else {
          anchorGeneratorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <pre>
       * Anchor generator to compute anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
       */
      public Builder setAnchorGenerator(
          object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.Builder builderForValue) {
        if (anchorGeneratorBuilder_ == null) {
          anchorGenerator_ = builderForValue.build();
          onChanged();
        } else {
          anchorGeneratorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <pre>
       * Anchor generator to compute anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
       */
      public Builder mergeAnchorGenerator(object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator value) {
        if (anchorGeneratorBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              anchorGenerator_ != null &&
              anchorGenerator_ != object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.getDefaultInstance()) {
            anchorGenerator_ =
              object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.newBuilder(anchorGenerator_).mergeFrom(value).buildPartial();
          } else {
            anchorGenerator_ = value;
          }
          onChanged();
        } else {
          anchorGeneratorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <pre>
       * Anchor generator to compute anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
       */
      public Builder clearAnchorGenerator() {
        if (anchorGeneratorBuilder_ == null) {
          anchorGenerator_ = null;
          onChanged();
        } else {
          anchorGeneratorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <pre>
       * Anchor generator to compute anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
       */
      public object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.Builder getAnchorGeneratorBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getAnchorGeneratorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Anchor generator to compute anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
       */
      public object_detection.protos.AnchorGeneratorOuterClass.AnchorGeneratorOrBuilder getAnchorGeneratorOrBuilder() {
        if (anchorGeneratorBuilder_ != null) {
          return anchorGeneratorBuilder_.getMessageOrBuilder();
        } else {
          return anchorGenerator_ == null ?
              object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.getDefaultInstance() : anchorGenerator_;
        }
      }
      /**
       * <pre>
       * Anchor generator to compute anchors.
       * </pre>
       *
       * <code>optional .object_detection.protos.AnchorGenerator anchor_generator = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator, object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.Builder, object_detection.protos.AnchorGeneratorOuterClass.AnchorGeneratorOrBuilder> 
          getAnchorGeneratorFieldBuilder() {
        if (anchorGeneratorBuilder_ == null) {
          anchorGeneratorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator, object_detection.protos.AnchorGeneratorOuterClass.AnchorGenerator.Builder, object_detection.protos.AnchorGeneratorOuterClass.AnchorGeneratorOrBuilder>(
                  getAnchorGenerator(),
                  getParentForChildren(),
                  isClean());
          anchorGenerator_ = null;
        }
        return anchorGeneratorBuilder_;
      }

      private object_detection.protos.PostProcessingOuterClass.PostProcessing postProcessing_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.PostProcessingOuterClass.PostProcessing, object_detection.protos.PostProcessingOuterClass.PostProcessing.Builder, object_detection.protos.PostProcessingOuterClass.PostProcessingOrBuilder> postProcessingBuilder_;
      /**
       * <pre>
       * Post processing to apply on the predictions.
       * </pre>
       *
       * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
       */
      public boolean hasPostProcessing() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       * Post processing to apply on the predictions.
       * </pre>
       *
       * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
       */
      public object_detection.protos.PostProcessingOuterClass.PostProcessing getPostProcessing() {
        if (postProcessingBuilder_ == null) {
          return postProcessing_ == null ? object_detection.protos.PostProcessingOuterClass.PostProcessing.getDefaultInstance() : postProcessing_;
        } else {
          return postProcessingBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Post processing to apply on the predictions.
       * </pre>
       *
       * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
       */
      public Builder setPostProcessing(object_detection.protos.PostProcessingOuterClass.PostProcessing value) {
        if (postProcessingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          postProcessing_ = value;
          onChanged();
        } else {
          postProcessingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <pre>
       * Post processing to apply on the predictions.
       * </pre>
       *
       * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
       */
      public Builder setPostProcessing(
          object_detection.protos.PostProcessingOuterClass.PostProcessing.Builder builderForValue) {
        if (postProcessingBuilder_ == null) {
          postProcessing_ = builderForValue.build();
          onChanged();
        } else {
          postProcessingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <pre>
       * Post processing to apply on the predictions.
       * </pre>
       *
       * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
       */
      public Builder mergePostProcessing(object_detection.protos.PostProcessingOuterClass.PostProcessing value) {
        if (postProcessingBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              postProcessing_ != null &&
              postProcessing_ != object_detection.protos.PostProcessingOuterClass.PostProcessing.getDefaultInstance()) {
            postProcessing_ =
              object_detection.protos.PostProcessingOuterClass.PostProcessing.newBuilder(postProcessing_).mergeFrom(value).buildPartial();
          } else {
            postProcessing_ = value;
          }
          onChanged();
        } else {
          postProcessingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <pre>
       * Post processing to apply on the predictions.
       * </pre>
       *
       * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
       */
      public Builder clearPostProcessing() {
        if (postProcessingBuilder_ == null) {
          postProcessing_ = null;
          onChanged();
        } else {
          postProcessingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <pre>
       * Post processing to apply on the predictions.
       * </pre>
       *
       * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
       */
      public object_detection.protos.PostProcessingOuterClass.PostProcessing.Builder getPostProcessingBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getPostProcessingFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Post processing to apply on the predictions.
       * </pre>
       *
       * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
       */
      public object_detection.protos.PostProcessingOuterClass.PostProcessingOrBuilder getPostProcessingOrBuilder() {
        if (postProcessingBuilder_ != null) {
          return postProcessingBuilder_.getMessageOrBuilder();
        } else {
          return postProcessing_ == null ?
              object_detection.protos.PostProcessingOuterClass.PostProcessing.getDefaultInstance() : postProcessing_;
        }
      }
      /**
       * <pre>
       * Post processing to apply on the predictions.
       * </pre>
       *
       * <code>optional .object_detection.protos.PostProcessing post_processing = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.PostProcessingOuterClass.PostProcessing, object_detection.protos.PostProcessingOuterClass.PostProcessing.Builder, object_detection.protos.PostProcessingOuterClass.PostProcessingOrBuilder> 
          getPostProcessingFieldBuilder() {
        if (postProcessingBuilder_ == null) {
          postProcessingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.PostProcessingOuterClass.PostProcessing, object_detection.protos.PostProcessingOuterClass.PostProcessing.Builder, object_detection.protos.PostProcessingOuterClass.PostProcessingOrBuilder>(
                  getPostProcessing(),
                  getParentForChildren(),
                  isClean());
          postProcessing_ = null;
        }
        return postProcessingBuilder_;
      }

      private boolean normalizeLossByNumMatches_ = true;
      /**
       * <pre>
       * Whether to normalize the loss by number of groundtruth boxes that match to
       * the anchors.
       * </pre>
       *
       * <code>optional bool normalize_loss_by_num_matches = 10 [default = true];</code>
       */
      public boolean hasNormalizeLossByNumMatches() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       * Whether to normalize the loss by number of groundtruth boxes that match to
       * the anchors.
       * </pre>
       *
       * <code>optional bool normalize_loss_by_num_matches = 10 [default = true];</code>
       */
      public boolean getNormalizeLossByNumMatches() {
        return normalizeLossByNumMatches_;
      }
      /**
       * <pre>
       * Whether to normalize the loss by number of groundtruth boxes that match to
       * the anchors.
       * </pre>
       *
       * <code>optional bool normalize_loss_by_num_matches = 10 [default = true];</code>
       */
      public Builder setNormalizeLossByNumMatches(boolean value) {
        bitField0_ |= 0x00000800;
        normalizeLossByNumMatches_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to normalize the loss by number of groundtruth boxes that match to
       * the anchors.
       * </pre>
       *
       * <code>optional bool normalize_loss_by_num_matches = 10 [default = true];</code>
       */
      public Builder clearNormalizeLossByNumMatches() {
        bitField0_ = (bitField0_ & ~0x00000800);
        normalizeLossByNumMatches_ = true;
        onChanged();
        return this;
      }

      private boolean normalizeLocLossByCodesize_ ;
      /**
       * <pre>
       * Whether to normalize the localization loss by the code size of the box
       * encodings. This is applied along with other normalization factors.
       * </pre>
       *
       * <code>optional bool normalize_loc_loss_by_codesize = 14 [default = false];</code>
       */
      public boolean hasNormalizeLocLossByCodesize() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       * Whether to normalize the localization loss by the code size of the box
       * encodings. This is applied along with other normalization factors.
       * </pre>
       *
       * <code>optional bool normalize_loc_loss_by_codesize = 14 [default = false];</code>
       */
      public boolean getNormalizeLocLossByCodesize() {
        return normalizeLocLossByCodesize_;
      }
      /**
       * <pre>
       * Whether to normalize the localization loss by the code size of the box
       * encodings. This is applied along with other normalization factors.
       * </pre>
       *
       * <code>optional bool normalize_loc_loss_by_codesize = 14 [default = false];</code>
       */
      public Builder setNormalizeLocLossByCodesize(boolean value) {
        bitField0_ |= 0x00001000;
        normalizeLocLossByCodesize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to normalize the localization loss by the code size of the box
       * encodings. This is applied along with other normalization factors.
       * </pre>
       *
       * <code>optional bool normalize_loc_loss_by_codesize = 14 [default = false];</code>
       */
      public Builder clearNormalizeLocLossByCodesize() {
        bitField0_ = (bitField0_ & ~0x00001000);
        normalizeLocLossByCodesize_ = false;
        onChanged();
        return this;
      }

      private object_detection.protos.Losses.Loss loss_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Losses.Loss, object_detection.protos.Losses.Loss.Builder, object_detection.protos.Losses.LossOrBuilder> lossBuilder_;
      /**
       * <pre>
       * Loss configuration for training.
       * </pre>
       *
       * <code>optional .object_detection.protos.Loss loss = 11;</code>
       */
      public boolean hasLoss() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       * Loss configuration for training.
       * </pre>
       *
       * <code>optional .object_detection.protos.Loss loss = 11;</code>
       */
      public object_detection.protos.Losses.Loss getLoss() {
        if (lossBuilder_ == null) {
          return loss_ == null ? object_detection.protos.Losses.Loss.getDefaultInstance() : loss_;
        } else {
          return lossBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Loss configuration for training.
       * </pre>
       *
       * <code>optional .object_detection.protos.Loss loss = 11;</code>
       */
      public Builder setLoss(object_detection.protos.Losses.Loss value) {
        if (lossBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loss_ = value;
          onChanged();
        } else {
          lossBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <pre>
       * Loss configuration for training.
       * </pre>
       *
       * <code>optional .object_detection.protos.Loss loss = 11;</code>
       */
      public Builder setLoss(
          object_detection.protos.Losses.Loss.Builder builderForValue) {
        if (lossBuilder_ == null) {
          loss_ = builderForValue.build();
          onChanged();
        } else {
          lossBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <pre>
       * Loss configuration for training.
       * </pre>
       *
       * <code>optional .object_detection.protos.Loss loss = 11;</code>
       */
      public Builder mergeLoss(object_detection.protos.Losses.Loss value) {
        if (lossBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              loss_ != null &&
              loss_ != object_detection.protos.Losses.Loss.getDefaultInstance()) {
            loss_ =
              object_detection.protos.Losses.Loss.newBuilder(loss_).mergeFrom(value).buildPartial();
          } else {
            loss_ = value;
          }
          onChanged();
        } else {
          lossBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <pre>
       * Loss configuration for training.
       * </pre>
       *
       * <code>optional .object_detection.protos.Loss loss = 11;</code>
       */
      public Builder clearLoss() {
        if (lossBuilder_ == null) {
          loss_ = null;
          onChanged();
        } else {
          lossBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <pre>
       * Loss configuration for training.
       * </pre>
       *
       * <code>optional .object_detection.protos.Loss loss = 11;</code>
       */
      public object_detection.protos.Losses.Loss.Builder getLossBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getLossFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Loss configuration for training.
       * </pre>
       *
       * <code>optional .object_detection.protos.Loss loss = 11;</code>
       */
      public object_detection.protos.Losses.LossOrBuilder getLossOrBuilder() {
        if (lossBuilder_ != null) {
          return lossBuilder_.getMessageOrBuilder();
        } else {
          return loss_ == null ?
              object_detection.protos.Losses.Loss.getDefaultInstance() : loss_;
        }
      }
      /**
       * <pre>
       * Loss configuration for training.
       * </pre>
       *
       * <code>optional .object_detection.protos.Loss loss = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Losses.Loss, object_detection.protos.Losses.Loss.Builder, object_detection.protos.Losses.LossOrBuilder> 
          getLossFieldBuilder() {
        if (lossBuilder_ == null) {
          lossBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Losses.Loss, object_detection.protos.Losses.Loss.Builder, object_detection.protos.Losses.LossOrBuilder>(
                  getLoss(),
                  getParentForChildren(),
                  isClean());
          loss_ = null;
        }
        return lossBuilder_;
      }

      private boolean freezeBatchnorm_ ;
      /**
       * <pre>
       * Whether to update batch norm parameters during training or not.
       * When training with a relative small batch size (e.g. 1), it is
       * desirable to disable batch norm update and use pretrained batch norm
       * params.
       * Note: Some feature extractors are used with canned arg_scopes
       * (e.g resnet arg scopes).  In these cases training behavior of batch norm
       * variables may depend on both values of `batch_norm_trainable` and
       * `is_training`.
       * When canned arg_scopes are used with feature extractors `conv_hyperparams`
       * will apply only to the additional layers that are added and are outside the
       * canned arg_scope.
       * </pre>
       *
       * <code>optional bool freeze_batchnorm = 16 [default = false];</code>
       */
      public boolean hasFreezeBatchnorm() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       * Whether to update batch norm parameters during training or not.
       * When training with a relative small batch size (e.g. 1), it is
       * desirable to disable batch norm update and use pretrained batch norm
       * params.
       * Note: Some feature extractors are used with canned arg_scopes
       * (e.g resnet arg scopes).  In these cases training behavior of batch norm
       * variables may depend on both values of `batch_norm_trainable` and
       * `is_training`.
       * When canned arg_scopes are used with feature extractors `conv_hyperparams`
       * will apply only to the additional layers that are added and are outside the
       * canned arg_scope.
       * </pre>
       *
       * <code>optional bool freeze_batchnorm = 16 [default = false];</code>
       */
      public boolean getFreezeBatchnorm() {
        return freezeBatchnorm_;
      }
      /**
       * <pre>
       * Whether to update batch norm parameters during training or not.
       * When training with a relative small batch size (e.g. 1), it is
       * desirable to disable batch norm update and use pretrained batch norm
       * params.
       * Note: Some feature extractors are used with canned arg_scopes
       * (e.g resnet arg scopes).  In these cases training behavior of batch norm
       * variables may depend on both values of `batch_norm_trainable` and
       * `is_training`.
       * When canned arg_scopes are used with feature extractors `conv_hyperparams`
       * will apply only to the additional layers that are added and are outside the
       * canned arg_scope.
       * </pre>
       *
       * <code>optional bool freeze_batchnorm = 16 [default = false];</code>
       */
      public Builder setFreezeBatchnorm(boolean value) {
        bitField0_ |= 0x00004000;
        freezeBatchnorm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to update batch norm parameters during training or not.
       * When training with a relative small batch size (e.g. 1), it is
       * desirable to disable batch norm update and use pretrained batch norm
       * params.
       * Note: Some feature extractors are used with canned arg_scopes
       * (e.g resnet arg scopes).  In these cases training behavior of batch norm
       * variables may depend on both values of `batch_norm_trainable` and
       * `is_training`.
       * When canned arg_scopes are used with feature extractors `conv_hyperparams`
       * will apply only to the additional layers that are added and are outside the
       * canned arg_scope.
       * </pre>
       *
       * <code>optional bool freeze_batchnorm = 16 [default = false];</code>
       */
      public Builder clearFreezeBatchnorm() {
        bitField0_ = (bitField0_ & ~0x00004000);
        freezeBatchnorm_ = false;
        onChanged();
        return this;
      }

      private boolean inplaceBatchnormUpdate_ ;
      /**
       * <pre>
       * Whether to update batch_norm inplace during training. This is required
       * for batch norm to work correctly on TPUs. When this is false, user must add
       * a control dependency on tf.GraphKeys.UPDATE_OPS for train/loss op in order
       * to update the batch norm moving average parameters.
       * </pre>
       *
       * <code>optional bool inplace_batchnorm_update = 15 [default = false];</code>
       */
      public boolean hasInplaceBatchnormUpdate() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <pre>
       * Whether to update batch_norm inplace during training. This is required
       * for batch norm to work correctly on TPUs. When this is false, user must add
       * a control dependency on tf.GraphKeys.UPDATE_OPS for train/loss op in order
       * to update the batch norm moving average parameters.
       * </pre>
       *
       * <code>optional bool inplace_batchnorm_update = 15 [default = false];</code>
       */
      public boolean getInplaceBatchnormUpdate() {
        return inplaceBatchnormUpdate_;
      }
      /**
       * <pre>
       * Whether to update batch_norm inplace during training. This is required
       * for batch norm to work correctly on TPUs. When this is false, user must add
       * a control dependency on tf.GraphKeys.UPDATE_OPS for train/loss op in order
       * to update the batch norm moving average parameters.
       * </pre>
       *
       * <code>optional bool inplace_batchnorm_update = 15 [default = false];</code>
       */
      public Builder setInplaceBatchnormUpdate(boolean value) {
        bitField0_ |= 0x00008000;
        inplaceBatchnormUpdate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to update batch_norm inplace during training. This is required
       * for batch norm to work correctly on TPUs. When this is false, user must add
       * a control dependency on tf.GraphKeys.UPDATE_OPS for train/loss op in order
       * to update the batch norm moving average parameters.
       * </pre>
       *
       * <code>optional bool inplace_batchnorm_update = 15 [default = false];</code>
       */
      public Builder clearInplaceBatchnormUpdate() {
        bitField0_ = (bitField0_ & ~0x00008000);
        inplaceBatchnormUpdate_ = false;
        onChanged();
        return this;
      }

      private boolean weightRegressionLossByScore_ ;
      /**
       * <pre>
       * Whether to weight the regression loss by the score of the ground truth box
       * the anchor matches to.
       * </pre>
       *
       * <code>optional bool weight_regression_loss_by_score = 17 [default = false];</code>
       */
      public boolean hasWeightRegressionLossByScore() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <pre>
       * Whether to weight the regression loss by the score of the ground truth box
       * the anchor matches to.
       * </pre>
       *
       * <code>optional bool weight_regression_loss_by_score = 17 [default = false];</code>
       */
      public boolean getWeightRegressionLossByScore() {
        return weightRegressionLossByScore_;
      }
      /**
       * <pre>
       * Whether to weight the regression loss by the score of the ground truth box
       * the anchor matches to.
       * </pre>
       *
       * <code>optional bool weight_regression_loss_by_score = 17 [default = false];</code>
       */
      public Builder setWeightRegressionLossByScore(boolean value) {
        bitField0_ |= 0x00010000;
        weightRegressionLossByScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to weight the regression loss by the score of the ground truth box
       * the anchor matches to.
       * </pre>
       *
       * <code>optional bool weight_regression_loss_by_score = 17 [default = false];</code>
       */
      public Builder clearWeightRegressionLossByScore() {
        bitField0_ = (bitField0_ & ~0x00010000);
        weightRegressionLossByScore_ = false;
        onChanged();
        return this;
      }

      private boolean useExpectedClassificationLossUnderSampling_ ;
      /**
       * <pre>
       * Whether to compute expected loss with respect to balanced positive/negative
       * sampling scheme. If false, use explicit sampling.
       * </pre>
       *
       * <code>optional bool use_expected_classification_loss_under_sampling = 18 [default = false];</code>
       */
      public boolean hasUseExpectedClassificationLossUnderSampling() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <pre>
       * Whether to compute expected loss with respect to balanced positive/negative
       * sampling scheme. If false, use explicit sampling.
       * </pre>
       *
       * <code>optional bool use_expected_classification_loss_under_sampling = 18 [default = false];</code>
       */
      public boolean getUseExpectedClassificationLossUnderSampling() {
        return useExpectedClassificationLossUnderSampling_;
      }
      /**
       * <pre>
       * Whether to compute expected loss with respect to balanced positive/negative
       * sampling scheme. If false, use explicit sampling.
       * </pre>
       *
       * <code>optional bool use_expected_classification_loss_under_sampling = 18 [default = false];</code>
       */
      public Builder setUseExpectedClassificationLossUnderSampling(boolean value) {
        bitField0_ |= 0x00020000;
        useExpectedClassificationLossUnderSampling_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to compute expected loss with respect to balanced positive/negative
       * sampling scheme. If false, use explicit sampling.
       * </pre>
       *
       * <code>optional bool use_expected_classification_loss_under_sampling = 18 [default = false];</code>
       */
      public Builder clearUseExpectedClassificationLossUnderSampling() {
        bitField0_ = (bitField0_ & ~0x00020000);
        useExpectedClassificationLossUnderSampling_ = false;
        onChanged();
        return this;
      }

      private float minimumNegativeSampling_ ;
      /**
       * <pre>
       * Minimum number of effective negative samples.
       * Only applies if use_expected_classification_loss_under_sampling is true.
       * </pre>
       *
       * <code>optional float minimum_negative_sampling = 19 [default = 0];</code>
       */
      public boolean hasMinimumNegativeSampling() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <pre>
       * Minimum number of effective negative samples.
       * Only applies if use_expected_classification_loss_under_sampling is true.
       * </pre>
       *
       * <code>optional float minimum_negative_sampling = 19 [default = 0];</code>
       */
      public float getMinimumNegativeSampling() {
        return minimumNegativeSampling_;
      }
      /**
       * <pre>
       * Minimum number of effective negative samples.
       * Only applies if use_expected_classification_loss_under_sampling is true.
       * </pre>
       *
       * <code>optional float minimum_negative_sampling = 19 [default = 0];</code>
       */
      public Builder setMinimumNegativeSampling(float value) {
        bitField0_ |= 0x00040000;
        minimumNegativeSampling_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum number of effective negative samples.
       * Only applies if use_expected_classification_loss_under_sampling is true.
       * </pre>
       *
       * <code>optional float minimum_negative_sampling = 19 [default = 0];</code>
       */
      public Builder clearMinimumNegativeSampling() {
        bitField0_ = (bitField0_ & ~0x00040000);
        minimumNegativeSampling_ = 0F;
        onChanged();
        return this;
      }

      private float desiredNegativeSamplingRatio_ = 3F;
      /**
       * <pre>
       * Desired number of effective negative samples per positive sample.
       * Only applies if use_expected_classification_loss_under_sampling is true.
       * </pre>
       *
       * <code>optional float desired_negative_sampling_ratio = 20 [default = 3];</code>
       */
      public boolean hasDesiredNegativeSamplingRatio() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <pre>
       * Desired number of effective negative samples per positive sample.
       * Only applies if use_expected_classification_loss_under_sampling is true.
       * </pre>
       *
       * <code>optional float desired_negative_sampling_ratio = 20 [default = 3];</code>
       */
      public float getDesiredNegativeSamplingRatio() {
        return desiredNegativeSamplingRatio_;
      }
      /**
       * <pre>
       * Desired number of effective negative samples per positive sample.
       * Only applies if use_expected_classification_loss_under_sampling is true.
       * </pre>
       *
       * <code>optional float desired_negative_sampling_ratio = 20 [default = 3];</code>
       */
      public Builder setDesiredNegativeSamplingRatio(float value) {
        bitField0_ |= 0x00080000;
        desiredNegativeSamplingRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Desired number of effective negative samples per positive sample.
       * Only applies if use_expected_classification_loss_under_sampling is true.
       * </pre>
       *
       * <code>optional float desired_negative_sampling_ratio = 20 [default = 3];</code>
       */
      public Builder clearDesiredNegativeSamplingRatio() {
        bitField0_ = (bitField0_ & ~0x00080000);
        desiredNegativeSamplingRatio_ = 3F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.Ssd)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.Ssd)
    private static final object_detection.protos.SsdOuterClass.Ssd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.SsdOuterClass.Ssd();
    }

    public static object_detection.protos.SsdOuterClass.Ssd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Ssd>
        PARSER = new com.google.protobuf.AbstractParser<Ssd>() {
      @java.lang.Override
      public Ssd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ssd(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ssd> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ssd> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.SsdOuterClass.Ssd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SsdFeatureExtractorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SsdFeatureExtractor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of ssd feature extractor.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * Type of ssd feature extractor.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * Type of ssd feature extractor.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The factor to alter the depth of the channels in the feature extractor.
     * </pre>
     *
     * <code>optional float depth_multiplier = 2 [default = 1];</code>
     */
    boolean hasDepthMultiplier();
    /**
     * <pre>
     * The factor to alter the depth of the channels in the feature extractor.
     * </pre>
     *
     * <code>optional float depth_multiplier = 2 [default = 1];</code>
     */
    float getDepthMultiplier();

    /**
     * <pre>
     * Minimum number of the channels in the feature extractor.
     * </pre>
     *
     * <code>optional int32 min_depth = 3 [default = 16];</code>
     */
    boolean hasMinDepth();
    /**
     * <pre>
     * Minimum number of the channels in the feature extractor.
     * </pre>
     *
     * <code>optional int32 min_depth = 3 [default = 16];</code>
     */
    int getMinDepth();

    /**
     * <pre>
     * Hyperparameters that affect the layers of feature extractor added on top
     * of the base feature extractor.
     * </pre>
     *
     * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
     */
    boolean hasConvHyperparams();
    /**
     * <pre>
     * Hyperparameters that affect the layers of feature extractor added on top
     * of the base feature extractor.
     * </pre>
     *
     * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
     */
    object_detection.protos.HyperparamsOuterClass.Hyperparams getConvHyperparams();
    /**
     * <pre>
     * Hyperparameters that affect the layers of feature extractor added on top
     * of the base feature extractor.
     * </pre>
     *
     * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
     */
    object_detection.protos.HyperparamsOuterClass.HyperparamsOrBuilder getConvHyperparamsOrBuilder();

    /**
     * <pre>
     * Normally, SSD feature extractors are constructed by reusing an existing
     * base feature extractor (that has its own hyperparams) and adding new layers
     * on top of it. `conv_hyperparams` above normally applies only to the new
     * layers while base feature extractor uses its own default hyperparams. If
     * this value is set to true, the base feature extractor's hyperparams will be
     * overridden with the `conv_hyperparams`.
     * </pre>
     *
     * <code>optional bool override_base_feature_extractor_hyperparams = 9 [default = false];</code>
     */
    boolean hasOverrideBaseFeatureExtractorHyperparams();
    /**
     * <pre>
     * Normally, SSD feature extractors are constructed by reusing an existing
     * base feature extractor (that has its own hyperparams) and adding new layers
     * on top of it. `conv_hyperparams` above normally applies only to the new
     * layers while base feature extractor uses its own default hyperparams. If
     * this value is set to true, the base feature extractor's hyperparams will be
     * overridden with the `conv_hyperparams`.
     * </pre>
     *
     * <code>optional bool override_base_feature_extractor_hyperparams = 9 [default = false];</code>
     */
    boolean getOverrideBaseFeatureExtractorHyperparams();

    /**
     * <pre>
     * The nearest multiple to zero-pad the input height and width dimensions to.
     * For example, if pad_to_multiple = 2, input dimensions are zero-padded
     * until the resulting dimensions are even.
     * </pre>
     *
     * <code>optional int32 pad_to_multiple = 5 [default = 1];</code>
     */
    boolean hasPadToMultiple();
    /**
     * <pre>
     * The nearest multiple to zero-pad the input height and width dimensions to.
     * For example, if pad_to_multiple = 2, input dimensions are zero-padded
     * until the resulting dimensions are even.
     * </pre>
     *
     * <code>optional int32 pad_to_multiple = 5 [default = 1];</code>
     */
    int getPadToMultiple();

    /**
     * <pre>
     * Whether to use explicit padding when extracting SSD multiresolution
     * features. This will also apply to the base feature extractor if a MobileNet
     * architecture is used.
     * </pre>
     *
     * <code>optional bool use_explicit_padding = 7 [default = false];</code>
     */
    boolean hasUseExplicitPadding();
    /**
     * <pre>
     * Whether to use explicit padding when extracting SSD multiresolution
     * features. This will also apply to the base feature extractor if a MobileNet
     * architecture is used.
     * </pre>
     *
     * <code>optional bool use_explicit_padding = 7 [default = false];</code>
     */
    boolean getUseExplicitPadding();

    /**
     * <pre>
     * Whether to use depthwise separable convolutions for to extract additional
     * feature maps added by SSD.
     * </pre>
     *
     * <code>optional bool use_depthwise = 8 [default = false];</code>
     */
    boolean hasUseDepthwise();
    /**
     * <pre>
     * Whether to use depthwise separable convolutions for to extract additional
     * feature maps added by SSD.
     * </pre>
     *
     * <code>optional bool use_depthwise = 8 [default = false];</code>
     */
    boolean getUseDepthwise();

    /**
     * <pre>
     * Feature Pyramid Networks config.
     * </pre>
     *
     * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
     */
    boolean hasFpn();
    /**
     * <pre>
     * Feature Pyramid Networks config.
     * </pre>
     *
     * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
     */
    object_detection.protos.SsdOuterClass.FeaturePyramidNetworks getFpn();
    /**
     * <pre>
     * Feature Pyramid Networks config.
     * </pre>
     *
     * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
     */
    object_detection.protos.SsdOuterClass.FeaturePyramidNetworksOrBuilder getFpnOrBuilder();
  }
  /**
   * Protobuf type {@code object_detection.protos.SsdFeatureExtractor}
   */
  public  static final class SsdFeatureExtractor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SsdFeatureExtractor)
      SsdFeatureExtractorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SsdFeatureExtractor.newBuilder() to construct.
    private SsdFeatureExtractor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SsdFeatureExtractor() {
      type_ = "";
      depthMultiplier_ = 1F;
      minDepth_ = 16;
      overrideBaseFeatureExtractorHyperparams_ = false;
      padToMultiple_ = 1;
      useExplicitPadding_ = false;
      useDepthwise_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SsdFeatureExtractor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              type_ = bs;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              depthMultiplier_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              minDepth_ = input.readInt32();
              break;
            }
            case 34: {
              object_detection.protos.HyperparamsOuterClass.Hyperparams.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = convHyperparams_.toBuilder();
              }
              convHyperparams_ = input.readMessage(object_detection.protos.HyperparamsOuterClass.Hyperparams.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(convHyperparams_);
                convHyperparams_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000020;
              padToMultiple_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              useExplicitPadding_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              useDepthwise_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000010;
              overrideBaseFeatureExtractorHyperparams_ = input.readBool();
              break;
            }
            case 82: {
              object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = fpn_.toBuilder();
              }
              fpn_ = input.readMessage(object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fpn_);
                fpn_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_SsdFeatureExtractor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_SsdFeatureExtractor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.SsdOuterClass.SsdFeatureExtractor.class, object_detection.protos.SsdOuterClass.SsdFeatureExtractor.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * Type of ssd feature extractor.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Type of ssd feature extractor.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Type of ssd feature extractor.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEPTH_MULTIPLIER_FIELD_NUMBER = 2;
    private float depthMultiplier_;
    /**
     * <pre>
     * The factor to alter the depth of the channels in the feature extractor.
     * </pre>
     *
     * <code>optional float depth_multiplier = 2 [default = 1];</code>
     */
    public boolean hasDepthMultiplier() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The factor to alter the depth of the channels in the feature extractor.
     * </pre>
     *
     * <code>optional float depth_multiplier = 2 [default = 1];</code>
     */
    public float getDepthMultiplier() {
      return depthMultiplier_;
    }

    public static final int MIN_DEPTH_FIELD_NUMBER = 3;
    private int minDepth_;
    /**
     * <pre>
     * Minimum number of the channels in the feature extractor.
     * </pre>
     *
     * <code>optional int32 min_depth = 3 [default = 16];</code>
     */
    public boolean hasMinDepth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Minimum number of the channels in the feature extractor.
     * </pre>
     *
     * <code>optional int32 min_depth = 3 [default = 16];</code>
     */
    public int getMinDepth() {
      return minDepth_;
    }

    public static final int CONV_HYPERPARAMS_FIELD_NUMBER = 4;
    private object_detection.protos.HyperparamsOuterClass.Hyperparams convHyperparams_;
    /**
     * <pre>
     * Hyperparameters that affect the layers of feature extractor added on top
     * of the base feature extractor.
     * </pre>
     *
     * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
     */
    public boolean hasConvHyperparams() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Hyperparameters that affect the layers of feature extractor added on top
     * of the base feature extractor.
     * </pre>
     *
     * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
     */
    public object_detection.protos.HyperparamsOuterClass.Hyperparams getConvHyperparams() {
      return convHyperparams_ == null ? object_detection.protos.HyperparamsOuterClass.Hyperparams.getDefaultInstance() : convHyperparams_;
    }
    /**
     * <pre>
     * Hyperparameters that affect the layers of feature extractor added on top
     * of the base feature extractor.
     * </pre>
     *
     * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
     */
    public object_detection.protos.HyperparamsOuterClass.HyperparamsOrBuilder getConvHyperparamsOrBuilder() {
      return convHyperparams_ == null ? object_detection.protos.HyperparamsOuterClass.Hyperparams.getDefaultInstance() : convHyperparams_;
    }

    public static final int OVERRIDE_BASE_FEATURE_EXTRACTOR_HYPERPARAMS_FIELD_NUMBER = 9;
    private boolean overrideBaseFeatureExtractorHyperparams_;
    /**
     * <pre>
     * Normally, SSD feature extractors are constructed by reusing an existing
     * base feature extractor (that has its own hyperparams) and adding new layers
     * on top of it. `conv_hyperparams` above normally applies only to the new
     * layers while base feature extractor uses its own default hyperparams. If
     * this value is set to true, the base feature extractor's hyperparams will be
     * overridden with the `conv_hyperparams`.
     * </pre>
     *
     * <code>optional bool override_base_feature_extractor_hyperparams = 9 [default = false];</code>
     */
    public boolean hasOverrideBaseFeatureExtractorHyperparams() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Normally, SSD feature extractors are constructed by reusing an existing
     * base feature extractor (that has its own hyperparams) and adding new layers
     * on top of it. `conv_hyperparams` above normally applies only to the new
     * layers while base feature extractor uses its own default hyperparams. If
     * this value is set to true, the base feature extractor's hyperparams will be
     * overridden with the `conv_hyperparams`.
     * </pre>
     *
     * <code>optional bool override_base_feature_extractor_hyperparams = 9 [default = false];</code>
     */
    public boolean getOverrideBaseFeatureExtractorHyperparams() {
      return overrideBaseFeatureExtractorHyperparams_;
    }

    public static final int PAD_TO_MULTIPLE_FIELD_NUMBER = 5;
    private int padToMultiple_;
    /**
     * <pre>
     * The nearest multiple to zero-pad the input height and width dimensions to.
     * For example, if pad_to_multiple = 2, input dimensions are zero-padded
     * until the resulting dimensions are even.
     * </pre>
     *
     * <code>optional int32 pad_to_multiple = 5 [default = 1];</code>
     */
    public boolean hasPadToMultiple() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * The nearest multiple to zero-pad the input height and width dimensions to.
     * For example, if pad_to_multiple = 2, input dimensions are zero-padded
     * until the resulting dimensions are even.
     * </pre>
     *
     * <code>optional int32 pad_to_multiple = 5 [default = 1];</code>
     */
    public int getPadToMultiple() {
      return padToMultiple_;
    }

    public static final int USE_EXPLICIT_PADDING_FIELD_NUMBER = 7;
    private boolean useExplicitPadding_;
    /**
     * <pre>
     * Whether to use explicit padding when extracting SSD multiresolution
     * features. This will also apply to the base feature extractor if a MobileNet
     * architecture is used.
     * </pre>
     *
     * <code>optional bool use_explicit_padding = 7 [default = false];</code>
     */
    public boolean hasUseExplicitPadding() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Whether to use explicit padding when extracting SSD multiresolution
     * features. This will also apply to the base feature extractor if a MobileNet
     * architecture is used.
     * </pre>
     *
     * <code>optional bool use_explicit_padding = 7 [default = false];</code>
     */
    public boolean getUseExplicitPadding() {
      return useExplicitPadding_;
    }

    public static final int USE_DEPTHWISE_FIELD_NUMBER = 8;
    private boolean useDepthwise_;
    /**
     * <pre>
     * Whether to use depthwise separable convolutions for to extract additional
     * feature maps added by SSD.
     * </pre>
     *
     * <code>optional bool use_depthwise = 8 [default = false];</code>
     */
    public boolean hasUseDepthwise() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Whether to use depthwise separable convolutions for to extract additional
     * feature maps added by SSD.
     * </pre>
     *
     * <code>optional bool use_depthwise = 8 [default = false];</code>
     */
    public boolean getUseDepthwise() {
      return useDepthwise_;
    }

    public static final int FPN_FIELD_NUMBER = 10;
    private object_detection.protos.SsdOuterClass.FeaturePyramidNetworks fpn_;
    /**
     * <pre>
     * Feature Pyramid Networks config.
     * </pre>
     *
     * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
     */
    public boolean hasFpn() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Feature Pyramid Networks config.
     * </pre>
     *
     * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
     */
    public object_detection.protos.SsdOuterClass.FeaturePyramidNetworks getFpn() {
      return fpn_ == null ? object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.getDefaultInstance() : fpn_;
    }
    /**
     * <pre>
     * Feature Pyramid Networks config.
     * </pre>
     *
     * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
     */
    public object_detection.protos.SsdOuterClass.FeaturePyramidNetworksOrBuilder getFpnOrBuilder() {
      return fpn_ == null ? object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.getDefaultInstance() : fpn_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, depthMultiplier_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, minDepth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getConvHyperparams());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(5, padToMultiple_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, useExplicitPadding_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, useDepthwise_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(9, overrideBaseFeatureExtractorHyperparams_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(10, getFpn());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, depthMultiplier_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, minDepth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getConvHyperparams());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, padToMultiple_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, useExplicitPadding_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, useDepthwise_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, overrideBaseFeatureExtractorHyperparams_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getFpn());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.SsdOuterClass.SsdFeatureExtractor)) {
        return super.equals(obj);
      }
      object_detection.protos.SsdOuterClass.SsdFeatureExtractor other = (object_detection.protos.SsdOuterClass.SsdFeatureExtractor) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && getType()
            .equals(other.getType());
      }
      result = result && (hasDepthMultiplier() == other.hasDepthMultiplier());
      if (hasDepthMultiplier()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDepthMultiplier())
            == java.lang.Float.floatToIntBits(
                other.getDepthMultiplier()));
      }
      result = result && (hasMinDepth() == other.hasMinDepth());
      if (hasMinDepth()) {
        result = result && (getMinDepth()
            == other.getMinDepth());
      }
      result = result && (hasConvHyperparams() == other.hasConvHyperparams());
      if (hasConvHyperparams()) {
        result = result && getConvHyperparams()
            .equals(other.getConvHyperparams());
      }
      result = result && (hasOverrideBaseFeatureExtractorHyperparams() == other.hasOverrideBaseFeatureExtractorHyperparams());
      if (hasOverrideBaseFeatureExtractorHyperparams()) {
        result = result && (getOverrideBaseFeatureExtractorHyperparams()
            == other.getOverrideBaseFeatureExtractorHyperparams());
      }
      result = result && (hasPadToMultiple() == other.hasPadToMultiple());
      if (hasPadToMultiple()) {
        result = result && (getPadToMultiple()
            == other.getPadToMultiple());
      }
      result = result && (hasUseExplicitPadding() == other.hasUseExplicitPadding());
      if (hasUseExplicitPadding()) {
        result = result && (getUseExplicitPadding()
            == other.getUseExplicitPadding());
      }
      result = result && (hasUseDepthwise() == other.hasUseDepthwise());
      if (hasUseDepthwise()) {
        result = result && (getUseDepthwise()
            == other.getUseDepthwise());
      }
      result = result && (hasFpn() == other.hasFpn());
      if (hasFpn()) {
        result = result && getFpn()
            .equals(other.getFpn());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (hasDepthMultiplier()) {
        hash = (37 * hash) + DEPTH_MULTIPLIER_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDepthMultiplier());
      }
      if (hasMinDepth()) {
        hash = (37 * hash) + MIN_DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + getMinDepth();
      }
      if (hasConvHyperparams()) {
        hash = (37 * hash) + CONV_HYPERPARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getConvHyperparams().hashCode();
      }
      if (hasOverrideBaseFeatureExtractorHyperparams()) {
        hash = (37 * hash) + OVERRIDE_BASE_FEATURE_EXTRACTOR_HYPERPARAMS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getOverrideBaseFeatureExtractorHyperparams());
      }
      if (hasPadToMultiple()) {
        hash = (37 * hash) + PAD_TO_MULTIPLE_FIELD_NUMBER;
        hash = (53 * hash) + getPadToMultiple();
      }
      if (hasUseExplicitPadding()) {
        hash = (37 * hash) + USE_EXPLICIT_PADDING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUseExplicitPadding());
      }
      if (hasUseDepthwise()) {
        hash = (37 * hash) + USE_DEPTHWISE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUseDepthwise());
      }
      if (hasFpn()) {
        hash = (37 * hash) + FPN_FIELD_NUMBER;
        hash = (53 * hash) + getFpn().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.SsdOuterClass.SsdFeatureExtractor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code object_detection.protos.SsdFeatureExtractor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SsdFeatureExtractor)
        object_detection.protos.SsdOuterClass.SsdFeatureExtractorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_SsdFeatureExtractor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_SsdFeatureExtractor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.SsdOuterClass.SsdFeatureExtractor.class, object_detection.protos.SsdOuterClass.SsdFeatureExtractor.Builder.class);
      }

      // Construct using object_detection.protos.SsdOuterClass.SsdFeatureExtractor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConvHyperparamsFieldBuilder();
          getFpnFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        depthMultiplier_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000002);
        minDepth_ = 16;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (convHyperparamsBuilder_ == null) {
          convHyperparams_ = null;
        } else {
          convHyperparamsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        overrideBaseFeatureExtractorHyperparams_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        padToMultiple_ = 1;
        bitField0_ = (bitField0_ & ~0x00000020);
        useExplicitPadding_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        useDepthwise_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (fpnBuilder_ == null) {
          fpn_ = null;
        } else {
          fpnBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_SsdFeatureExtractor_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.SsdOuterClass.SsdFeatureExtractor getDefaultInstanceForType() {
        return object_detection.protos.SsdOuterClass.SsdFeatureExtractor.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.SsdOuterClass.SsdFeatureExtractor build() {
        object_detection.protos.SsdOuterClass.SsdFeatureExtractor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.SsdOuterClass.SsdFeatureExtractor buildPartial() {
        object_detection.protos.SsdOuterClass.SsdFeatureExtractor result = new object_detection.protos.SsdOuterClass.SsdFeatureExtractor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.depthMultiplier_ = depthMultiplier_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.minDepth_ = minDepth_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (convHyperparamsBuilder_ == null) {
          result.convHyperparams_ = convHyperparams_;
        } else {
          result.convHyperparams_ = convHyperparamsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.overrideBaseFeatureExtractorHyperparams_ = overrideBaseFeatureExtractorHyperparams_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.padToMultiple_ = padToMultiple_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.useExplicitPadding_ = useExplicitPadding_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.useDepthwise_ = useDepthwise_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (fpnBuilder_ == null) {
          result.fpn_ = fpn_;
        } else {
          result.fpn_ = fpnBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.SsdOuterClass.SsdFeatureExtractor) {
          return mergeFrom((object_detection.protos.SsdOuterClass.SsdFeatureExtractor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.SsdOuterClass.SsdFeatureExtractor other) {
        if (other == object_detection.protos.SsdOuterClass.SsdFeatureExtractor.getDefaultInstance()) return this;
        if (other.hasType()) {
          bitField0_ |= 0x00000001;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasDepthMultiplier()) {
          setDepthMultiplier(other.getDepthMultiplier());
        }
        if (other.hasMinDepth()) {
          setMinDepth(other.getMinDepth());
        }
        if (other.hasConvHyperparams()) {
          mergeConvHyperparams(other.getConvHyperparams());
        }
        if (other.hasOverrideBaseFeatureExtractorHyperparams()) {
          setOverrideBaseFeatureExtractorHyperparams(other.getOverrideBaseFeatureExtractorHyperparams());
        }
        if (other.hasPadToMultiple()) {
          setPadToMultiple(other.getPadToMultiple());
        }
        if (other.hasUseExplicitPadding()) {
          setUseExplicitPadding(other.getUseExplicitPadding());
        }
        if (other.hasUseDepthwise()) {
          setUseDepthwise(other.getUseDepthwise());
        }
        if (other.hasFpn()) {
          mergeFpn(other.getFpn());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.SsdOuterClass.SsdFeatureExtractor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.SsdOuterClass.SsdFeatureExtractor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * Type of ssd feature extractor.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Type of ssd feature extractor.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Type of ssd feature extractor.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Type of ssd feature extractor.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of ssd feature extractor.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of ssd feature extractor.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }

      private float depthMultiplier_ = 1F;
      /**
       * <pre>
       * The factor to alter the depth of the channels in the feature extractor.
       * </pre>
       *
       * <code>optional float depth_multiplier = 2 [default = 1];</code>
       */
      public boolean hasDepthMultiplier() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The factor to alter the depth of the channels in the feature extractor.
       * </pre>
       *
       * <code>optional float depth_multiplier = 2 [default = 1];</code>
       */
      public float getDepthMultiplier() {
        return depthMultiplier_;
      }
      /**
       * <pre>
       * The factor to alter the depth of the channels in the feature extractor.
       * </pre>
       *
       * <code>optional float depth_multiplier = 2 [default = 1];</code>
       */
      public Builder setDepthMultiplier(float value) {
        bitField0_ |= 0x00000002;
        depthMultiplier_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The factor to alter the depth of the channels in the feature extractor.
       * </pre>
       *
       * <code>optional float depth_multiplier = 2 [default = 1];</code>
       */
      public Builder clearDepthMultiplier() {
        bitField0_ = (bitField0_ & ~0x00000002);
        depthMultiplier_ = 1F;
        onChanged();
        return this;
      }

      private int minDepth_ = 16;
      /**
       * <pre>
       * Minimum number of the channels in the feature extractor.
       * </pre>
       *
       * <code>optional int32 min_depth = 3 [default = 16];</code>
       */
      public boolean hasMinDepth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Minimum number of the channels in the feature extractor.
       * </pre>
       *
       * <code>optional int32 min_depth = 3 [default = 16];</code>
       */
      public int getMinDepth() {
        return minDepth_;
      }
      /**
       * <pre>
       * Minimum number of the channels in the feature extractor.
       * </pre>
       *
       * <code>optional int32 min_depth = 3 [default = 16];</code>
       */
      public Builder setMinDepth(int value) {
        bitField0_ |= 0x00000004;
        minDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum number of the channels in the feature extractor.
       * </pre>
       *
       * <code>optional int32 min_depth = 3 [default = 16];</code>
       */
      public Builder clearMinDepth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        minDepth_ = 16;
        onChanged();
        return this;
      }

      private object_detection.protos.HyperparamsOuterClass.Hyperparams convHyperparams_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.HyperparamsOuterClass.Hyperparams, object_detection.protos.HyperparamsOuterClass.Hyperparams.Builder, object_detection.protos.HyperparamsOuterClass.HyperparamsOrBuilder> convHyperparamsBuilder_;
      /**
       * <pre>
       * Hyperparameters that affect the layers of feature extractor added on top
       * of the base feature extractor.
       * </pre>
       *
       * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
       */
      public boolean hasConvHyperparams() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Hyperparameters that affect the layers of feature extractor added on top
       * of the base feature extractor.
       * </pre>
       *
       * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
       */
      public object_detection.protos.HyperparamsOuterClass.Hyperparams getConvHyperparams() {
        if (convHyperparamsBuilder_ == null) {
          return convHyperparams_ == null ? object_detection.protos.HyperparamsOuterClass.Hyperparams.getDefaultInstance() : convHyperparams_;
        } else {
          return convHyperparamsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Hyperparameters that affect the layers of feature extractor added on top
       * of the base feature extractor.
       * </pre>
       *
       * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
       */
      public Builder setConvHyperparams(object_detection.protos.HyperparamsOuterClass.Hyperparams value) {
        if (convHyperparamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          convHyperparams_ = value;
          onChanged();
        } else {
          convHyperparamsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Hyperparameters that affect the layers of feature extractor added on top
       * of the base feature extractor.
       * </pre>
       *
       * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
       */
      public Builder setConvHyperparams(
          object_detection.protos.HyperparamsOuterClass.Hyperparams.Builder builderForValue) {
        if (convHyperparamsBuilder_ == null) {
          convHyperparams_ = builderForValue.build();
          onChanged();
        } else {
          convHyperparamsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Hyperparameters that affect the layers of feature extractor added on top
       * of the base feature extractor.
       * </pre>
       *
       * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
       */
      public Builder mergeConvHyperparams(object_detection.protos.HyperparamsOuterClass.Hyperparams value) {
        if (convHyperparamsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              convHyperparams_ != null &&
              convHyperparams_ != object_detection.protos.HyperparamsOuterClass.Hyperparams.getDefaultInstance()) {
            convHyperparams_ =
              object_detection.protos.HyperparamsOuterClass.Hyperparams.newBuilder(convHyperparams_).mergeFrom(value).buildPartial();
          } else {
            convHyperparams_ = value;
          }
          onChanged();
        } else {
          convHyperparamsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Hyperparameters that affect the layers of feature extractor added on top
       * of the base feature extractor.
       * </pre>
       *
       * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
       */
      public Builder clearConvHyperparams() {
        if (convHyperparamsBuilder_ == null) {
          convHyperparams_ = null;
          onChanged();
        } else {
          convHyperparamsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Hyperparameters that affect the layers of feature extractor added on top
       * of the base feature extractor.
       * </pre>
       *
       * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
       */
      public object_detection.protos.HyperparamsOuterClass.Hyperparams.Builder getConvHyperparamsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getConvHyperparamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Hyperparameters that affect the layers of feature extractor added on top
       * of the base feature extractor.
       * </pre>
       *
       * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
       */
      public object_detection.protos.HyperparamsOuterClass.HyperparamsOrBuilder getConvHyperparamsOrBuilder() {
        if (convHyperparamsBuilder_ != null) {
          return convHyperparamsBuilder_.getMessageOrBuilder();
        } else {
          return convHyperparams_ == null ?
              object_detection.protos.HyperparamsOuterClass.Hyperparams.getDefaultInstance() : convHyperparams_;
        }
      }
      /**
       * <pre>
       * Hyperparameters that affect the layers of feature extractor added on top
       * of the base feature extractor.
       * </pre>
       *
       * <code>optional .object_detection.protos.Hyperparams conv_hyperparams = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.HyperparamsOuterClass.Hyperparams, object_detection.protos.HyperparamsOuterClass.Hyperparams.Builder, object_detection.protos.HyperparamsOuterClass.HyperparamsOrBuilder> 
          getConvHyperparamsFieldBuilder() {
        if (convHyperparamsBuilder_ == null) {
          convHyperparamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.HyperparamsOuterClass.Hyperparams, object_detection.protos.HyperparamsOuterClass.Hyperparams.Builder, object_detection.protos.HyperparamsOuterClass.HyperparamsOrBuilder>(
                  getConvHyperparams(),
                  getParentForChildren(),
                  isClean());
          convHyperparams_ = null;
        }
        return convHyperparamsBuilder_;
      }

      private boolean overrideBaseFeatureExtractorHyperparams_ ;
      /**
       * <pre>
       * Normally, SSD feature extractors are constructed by reusing an existing
       * base feature extractor (that has its own hyperparams) and adding new layers
       * on top of it. `conv_hyperparams` above normally applies only to the new
       * layers while base feature extractor uses its own default hyperparams. If
       * this value is set to true, the base feature extractor's hyperparams will be
       * overridden with the `conv_hyperparams`.
       * </pre>
       *
       * <code>optional bool override_base_feature_extractor_hyperparams = 9 [default = false];</code>
       */
      public boolean hasOverrideBaseFeatureExtractorHyperparams() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Normally, SSD feature extractors are constructed by reusing an existing
       * base feature extractor (that has its own hyperparams) and adding new layers
       * on top of it. `conv_hyperparams` above normally applies only to the new
       * layers while base feature extractor uses its own default hyperparams. If
       * this value is set to true, the base feature extractor's hyperparams will be
       * overridden with the `conv_hyperparams`.
       * </pre>
       *
       * <code>optional bool override_base_feature_extractor_hyperparams = 9 [default = false];</code>
       */
      public boolean getOverrideBaseFeatureExtractorHyperparams() {
        return overrideBaseFeatureExtractorHyperparams_;
      }
      /**
       * <pre>
       * Normally, SSD feature extractors are constructed by reusing an existing
       * base feature extractor (that has its own hyperparams) and adding new layers
       * on top of it. `conv_hyperparams` above normally applies only to the new
       * layers while base feature extractor uses its own default hyperparams. If
       * this value is set to true, the base feature extractor's hyperparams will be
       * overridden with the `conv_hyperparams`.
       * </pre>
       *
       * <code>optional bool override_base_feature_extractor_hyperparams = 9 [default = false];</code>
       */
      public Builder setOverrideBaseFeatureExtractorHyperparams(boolean value) {
        bitField0_ |= 0x00000010;
        overrideBaseFeatureExtractorHyperparams_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Normally, SSD feature extractors are constructed by reusing an existing
       * base feature extractor (that has its own hyperparams) and adding new layers
       * on top of it. `conv_hyperparams` above normally applies only to the new
       * layers while base feature extractor uses its own default hyperparams. If
       * this value is set to true, the base feature extractor's hyperparams will be
       * overridden with the `conv_hyperparams`.
       * </pre>
       *
       * <code>optional bool override_base_feature_extractor_hyperparams = 9 [default = false];</code>
       */
      public Builder clearOverrideBaseFeatureExtractorHyperparams() {
        bitField0_ = (bitField0_ & ~0x00000010);
        overrideBaseFeatureExtractorHyperparams_ = false;
        onChanged();
        return this;
      }

      private int padToMultiple_ = 1;
      /**
       * <pre>
       * The nearest multiple to zero-pad the input height and width dimensions to.
       * For example, if pad_to_multiple = 2, input dimensions are zero-padded
       * until the resulting dimensions are even.
       * </pre>
       *
       * <code>optional int32 pad_to_multiple = 5 [default = 1];</code>
       */
      public boolean hasPadToMultiple() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * The nearest multiple to zero-pad the input height and width dimensions to.
       * For example, if pad_to_multiple = 2, input dimensions are zero-padded
       * until the resulting dimensions are even.
       * </pre>
       *
       * <code>optional int32 pad_to_multiple = 5 [default = 1];</code>
       */
      public int getPadToMultiple() {
        return padToMultiple_;
      }
      /**
       * <pre>
       * The nearest multiple to zero-pad the input height and width dimensions to.
       * For example, if pad_to_multiple = 2, input dimensions are zero-padded
       * until the resulting dimensions are even.
       * </pre>
       *
       * <code>optional int32 pad_to_multiple = 5 [default = 1];</code>
       */
      public Builder setPadToMultiple(int value) {
        bitField0_ |= 0x00000020;
        padToMultiple_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The nearest multiple to zero-pad the input height and width dimensions to.
       * For example, if pad_to_multiple = 2, input dimensions are zero-padded
       * until the resulting dimensions are even.
       * </pre>
       *
       * <code>optional int32 pad_to_multiple = 5 [default = 1];</code>
       */
      public Builder clearPadToMultiple() {
        bitField0_ = (bitField0_ & ~0x00000020);
        padToMultiple_ = 1;
        onChanged();
        return this;
      }

      private boolean useExplicitPadding_ ;
      /**
       * <pre>
       * Whether to use explicit padding when extracting SSD multiresolution
       * features. This will also apply to the base feature extractor if a MobileNet
       * architecture is used.
       * </pre>
       *
       * <code>optional bool use_explicit_padding = 7 [default = false];</code>
       */
      public boolean hasUseExplicitPadding() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * Whether to use explicit padding when extracting SSD multiresolution
       * features. This will also apply to the base feature extractor if a MobileNet
       * architecture is used.
       * </pre>
       *
       * <code>optional bool use_explicit_padding = 7 [default = false];</code>
       */
      public boolean getUseExplicitPadding() {
        return useExplicitPadding_;
      }
      /**
       * <pre>
       * Whether to use explicit padding when extracting SSD multiresolution
       * features. This will also apply to the base feature extractor if a MobileNet
       * architecture is used.
       * </pre>
       *
       * <code>optional bool use_explicit_padding = 7 [default = false];</code>
       */
      public Builder setUseExplicitPadding(boolean value) {
        bitField0_ |= 0x00000040;
        useExplicitPadding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to use explicit padding when extracting SSD multiresolution
       * features. This will also apply to the base feature extractor if a MobileNet
       * architecture is used.
       * </pre>
       *
       * <code>optional bool use_explicit_padding = 7 [default = false];</code>
       */
      public Builder clearUseExplicitPadding() {
        bitField0_ = (bitField0_ & ~0x00000040);
        useExplicitPadding_ = false;
        onChanged();
        return this;
      }

      private boolean useDepthwise_ ;
      /**
       * <pre>
       * Whether to use depthwise separable convolutions for to extract additional
       * feature maps added by SSD.
       * </pre>
       *
       * <code>optional bool use_depthwise = 8 [default = false];</code>
       */
      public boolean hasUseDepthwise() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * Whether to use depthwise separable convolutions for to extract additional
       * feature maps added by SSD.
       * </pre>
       *
       * <code>optional bool use_depthwise = 8 [default = false];</code>
       */
      public boolean getUseDepthwise() {
        return useDepthwise_;
      }
      /**
       * <pre>
       * Whether to use depthwise separable convolutions for to extract additional
       * feature maps added by SSD.
       * </pre>
       *
       * <code>optional bool use_depthwise = 8 [default = false];</code>
       */
      public Builder setUseDepthwise(boolean value) {
        bitField0_ |= 0x00000080;
        useDepthwise_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to use depthwise separable convolutions for to extract additional
       * feature maps added by SSD.
       * </pre>
       *
       * <code>optional bool use_depthwise = 8 [default = false];</code>
       */
      public Builder clearUseDepthwise() {
        bitField0_ = (bitField0_ & ~0x00000080);
        useDepthwise_ = false;
        onChanged();
        return this;
      }

      private object_detection.protos.SsdOuterClass.FeaturePyramidNetworks fpn_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.SsdOuterClass.FeaturePyramidNetworks, object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.Builder, object_detection.protos.SsdOuterClass.FeaturePyramidNetworksOrBuilder> fpnBuilder_;
      /**
       * <pre>
       * Feature Pyramid Networks config.
       * </pre>
       *
       * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
       */
      public boolean hasFpn() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * Feature Pyramid Networks config.
       * </pre>
       *
       * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
       */
      public object_detection.protos.SsdOuterClass.FeaturePyramidNetworks getFpn() {
        if (fpnBuilder_ == null) {
          return fpn_ == null ? object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.getDefaultInstance() : fpn_;
        } else {
          return fpnBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Feature Pyramid Networks config.
       * </pre>
       *
       * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
       */
      public Builder setFpn(object_detection.protos.SsdOuterClass.FeaturePyramidNetworks value) {
        if (fpnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fpn_ = value;
          onChanged();
        } else {
          fpnBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Feature Pyramid Networks config.
       * </pre>
       *
       * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
       */
      public Builder setFpn(
          object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.Builder builderForValue) {
        if (fpnBuilder_ == null) {
          fpn_ = builderForValue.build();
          onChanged();
        } else {
          fpnBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Feature Pyramid Networks config.
       * </pre>
       *
       * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
       */
      public Builder mergeFpn(object_detection.protos.SsdOuterClass.FeaturePyramidNetworks value) {
        if (fpnBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              fpn_ != null &&
              fpn_ != object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.getDefaultInstance()) {
            fpn_ =
              object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.newBuilder(fpn_).mergeFrom(value).buildPartial();
          } else {
            fpn_ = value;
          }
          onChanged();
        } else {
          fpnBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Feature Pyramid Networks config.
       * </pre>
       *
       * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
       */
      public Builder clearFpn() {
        if (fpnBuilder_ == null) {
          fpn_ = null;
          onChanged();
        } else {
          fpnBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <pre>
       * Feature Pyramid Networks config.
       * </pre>
       *
       * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
       */
      public object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.Builder getFpnBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getFpnFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Feature Pyramid Networks config.
       * </pre>
       *
       * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
       */
      public object_detection.protos.SsdOuterClass.FeaturePyramidNetworksOrBuilder getFpnOrBuilder() {
        if (fpnBuilder_ != null) {
          return fpnBuilder_.getMessageOrBuilder();
        } else {
          return fpn_ == null ?
              object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.getDefaultInstance() : fpn_;
        }
      }
      /**
       * <pre>
       * Feature Pyramid Networks config.
       * </pre>
       *
       * <code>optional .object_detection.protos.FeaturePyramidNetworks fpn = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.SsdOuterClass.FeaturePyramidNetworks, object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.Builder, object_detection.protos.SsdOuterClass.FeaturePyramidNetworksOrBuilder> 
          getFpnFieldBuilder() {
        if (fpnBuilder_ == null) {
          fpnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.SsdOuterClass.FeaturePyramidNetworks, object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.Builder, object_detection.protos.SsdOuterClass.FeaturePyramidNetworksOrBuilder>(
                  getFpn(),
                  getParentForChildren(),
                  isClean());
          fpn_ = null;
        }
        return fpnBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SsdFeatureExtractor)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SsdFeatureExtractor)
    private static final object_detection.protos.SsdOuterClass.SsdFeatureExtractor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.SsdOuterClass.SsdFeatureExtractor();
    }

    public static object_detection.protos.SsdOuterClass.SsdFeatureExtractor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SsdFeatureExtractor>
        PARSER = new com.google.protobuf.AbstractParser<SsdFeatureExtractor>() {
      @java.lang.Override
      public SsdFeatureExtractor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SsdFeatureExtractor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SsdFeatureExtractor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SsdFeatureExtractor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.SsdOuterClass.SsdFeatureExtractor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FeaturePyramidNetworksOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.FeaturePyramidNetworks)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * minimum level in feature pyramid
     * </pre>
     *
     * <code>optional int32 min_level = 1 [default = 3];</code>
     */
    boolean hasMinLevel();
    /**
     * <pre>
     * minimum level in feature pyramid
     * </pre>
     *
     * <code>optional int32 min_level = 1 [default = 3];</code>
     */
    int getMinLevel();

    /**
     * <pre>
     * maximum level in feature pyramid
     * </pre>
     *
     * <code>optional int32 max_level = 2 [default = 7];</code>
     */
    boolean hasMaxLevel();
    /**
     * <pre>
     * maximum level in feature pyramid
     * </pre>
     *
     * <code>optional int32 max_level = 2 [default = 7];</code>
     */
    int getMaxLevel();
  }
  /**
   * <pre>
   * Configuration for Feature Pyramid Networks.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.FeaturePyramidNetworks}
   */
  public  static final class FeaturePyramidNetworks extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.FeaturePyramidNetworks)
      FeaturePyramidNetworksOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FeaturePyramidNetworks.newBuilder() to construct.
    private FeaturePyramidNetworks(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FeaturePyramidNetworks() {
      minLevel_ = 3;
      maxLevel_ = 7;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FeaturePyramidNetworks(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              minLevel_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxLevel_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_FeaturePyramidNetworks_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_FeaturePyramidNetworks_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.class, object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_LEVEL_FIELD_NUMBER = 1;
    private int minLevel_;
    /**
     * <pre>
     * minimum level in feature pyramid
     * </pre>
     *
     * <code>optional int32 min_level = 1 [default = 3];</code>
     */
    public boolean hasMinLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * minimum level in feature pyramid
     * </pre>
     *
     * <code>optional int32 min_level = 1 [default = 3];</code>
     */
    public int getMinLevel() {
      return minLevel_;
    }

    public static final int MAX_LEVEL_FIELD_NUMBER = 2;
    private int maxLevel_;
    /**
     * <pre>
     * maximum level in feature pyramid
     * </pre>
     *
     * <code>optional int32 max_level = 2 [default = 7];</code>
     */
    public boolean hasMaxLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * maximum level in feature pyramid
     * </pre>
     *
     * <code>optional int32 max_level = 2 [default = 7];</code>
     */
    public int getMaxLevel() {
      return maxLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, minLevel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxLevel_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, minLevel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxLevel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.SsdOuterClass.FeaturePyramidNetworks)) {
        return super.equals(obj);
      }
      object_detection.protos.SsdOuterClass.FeaturePyramidNetworks other = (object_detection.protos.SsdOuterClass.FeaturePyramidNetworks) obj;

      boolean result = true;
      result = result && (hasMinLevel() == other.hasMinLevel());
      if (hasMinLevel()) {
        result = result && (getMinLevel()
            == other.getMinLevel());
      }
      result = result && (hasMaxLevel() == other.hasMaxLevel());
      if (hasMaxLevel()) {
        result = result && (getMaxLevel()
            == other.getMaxLevel());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinLevel()) {
        hash = (37 * hash) + MIN_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getMinLevel();
      }
      if (hasMaxLevel()) {
        hash = (37 * hash) + MAX_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getMaxLevel();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.SsdOuterClass.FeaturePyramidNetworks prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configuration for Feature Pyramid Networks.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.FeaturePyramidNetworks}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.FeaturePyramidNetworks)
        object_detection.protos.SsdOuterClass.FeaturePyramidNetworksOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_FeaturePyramidNetworks_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_FeaturePyramidNetworks_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.class, object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.Builder.class);
      }

      // Construct using object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minLevel_ = 3;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxLevel_ = 7;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.SsdOuterClass.internal_static_object_detection_protos_FeaturePyramidNetworks_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.SsdOuterClass.FeaturePyramidNetworks getDefaultInstanceForType() {
        return object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.SsdOuterClass.FeaturePyramidNetworks build() {
        object_detection.protos.SsdOuterClass.FeaturePyramidNetworks result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.SsdOuterClass.FeaturePyramidNetworks buildPartial() {
        object_detection.protos.SsdOuterClass.FeaturePyramidNetworks result = new object_detection.protos.SsdOuterClass.FeaturePyramidNetworks(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minLevel_ = minLevel_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxLevel_ = maxLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.SsdOuterClass.FeaturePyramidNetworks) {
          return mergeFrom((object_detection.protos.SsdOuterClass.FeaturePyramidNetworks)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.SsdOuterClass.FeaturePyramidNetworks other) {
        if (other == object_detection.protos.SsdOuterClass.FeaturePyramidNetworks.getDefaultInstance()) return this;
        if (other.hasMinLevel()) {
          setMinLevel(other.getMinLevel());
        }
        if (other.hasMaxLevel()) {
          setMaxLevel(other.getMaxLevel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.SsdOuterClass.FeaturePyramidNetworks parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.SsdOuterClass.FeaturePyramidNetworks) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int minLevel_ = 3;
      /**
       * <pre>
       * minimum level in feature pyramid
       * </pre>
       *
       * <code>optional int32 min_level = 1 [default = 3];</code>
       */
      public boolean hasMinLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * minimum level in feature pyramid
       * </pre>
       *
       * <code>optional int32 min_level = 1 [default = 3];</code>
       */
      public int getMinLevel() {
        return minLevel_;
      }
      /**
       * <pre>
       * minimum level in feature pyramid
       * </pre>
       *
       * <code>optional int32 min_level = 1 [default = 3];</code>
       */
      public Builder setMinLevel(int value) {
        bitField0_ |= 0x00000001;
        minLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * minimum level in feature pyramid
       * </pre>
       *
       * <code>optional int32 min_level = 1 [default = 3];</code>
       */
      public Builder clearMinLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minLevel_ = 3;
        onChanged();
        return this;
      }

      private int maxLevel_ = 7;
      /**
       * <pre>
       * maximum level in feature pyramid
       * </pre>
       *
       * <code>optional int32 max_level = 2 [default = 7];</code>
       */
      public boolean hasMaxLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * maximum level in feature pyramid
       * </pre>
       *
       * <code>optional int32 max_level = 2 [default = 7];</code>
       */
      public int getMaxLevel() {
        return maxLevel_;
      }
      /**
       * <pre>
       * maximum level in feature pyramid
       * </pre>
       *
       * <code>optional int32 max_level = 2 [default = 7];</code>
       */
      public Builder setMaxLevel(int value) {
        bitField0_ |= 0x00000002;
        maxLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * maximum level in feature pyramid
       * </pre>
       *
       * <code>optional int32 max_level = 2 [default = 7];</code>
       */
      public Builder clearMaxLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxLevel_ = 7;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.FeaturePyramidNetworks)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.FeaturePyramidNetworks)
    private static final object_detection.protos.SsdOuterClass.FeaturePyramidNetworks DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.SsdOuterClass.FeaturePyramidNetworks();
    }

    public static object_detection.protos.SsdOuterClass.FeaturePyramidNetworks getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FeaturePyramidNetworks>
        PARSER = new com.google.protobuf.AbstractParser<FeaturePyramidNetworks>() {
      @java.lang.Override
      public FeaturePyramidNetworks parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FeaturePyramidNetworks(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FeaturePyramidNetworks> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FeaturePyramidNetworks> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.SsdOuterClass.FeaturePyramidNetworks getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_Ssd_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_Ssd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SsdFeatureExtractor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SsdFeatureExtractor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_FeaturePyramidNetworks_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_FeaturePyramidNetworks_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!object_detection/protos/ssd.proto\022\027obj" +
      "ect_detection.protos\032.object_detection/p" +
      "rotos/anchor_generator.proto\032\'object_det" +
      "ection/protos/box_coder.proto\032+object_de" +
      "tection/protos/box_predictor.proto\032)obje" +
      "ct_detection/protos/hyperparams.proto\032+o" +
      "bject_detection/protos/image_resizer.pro" +
      "to\032%object_detection/protos/matcher.prot" +
      "o\032$object_detection/protos/losses.proto\032" +
      "-object_detection/protos/post_processing" +
      ".proto\032:object_detection/protos/region_s" +
      "imilarity_calculator.proto\"\204\010\n\003Ssd\022\023\n\013nu" +
      "m_classes\030\001 \001(\005\022<\n\rimage_resizer\030\002 \001(\0132%" +
      ".object_detection.protos.ImageResizer\022G\n" +
      "\021feature_extractor\030\003 \001(\0132,.object_detect" +
      "ion.protos.SsdFeatureExtractor\0224\n\tbox_co" +
      "der\030\004 \001(\0132!.object_detection.protos.BoxC" +
      "oder\0221\n\007matcher\030\005 \001(\0132 .object_detection" +
      ".protos.Matcher\022R\n\025similarity_calculator" +
      "\030\006 \001(\01323.object_detection.protos.RegionS" +
      "imilarityCalculator\022)\n\032encode_background" +
      "_as_zeros\030\014 \001(\010:\005false\022 \n\025negative_class" +
      "_weight\030\r \001(\002:\0011\022<\n\rbox_predictor\030\007 \001(\0132" +
      "%.object_detection.protos.BoxPredictor\022B" +
      "\n\020anchor_generator\030\010 \001(\0132(.object_detect" +
      "ion.protos.AnchorGenerator\022@\n\017post_proce" +
      "ssing\030\t \001(\0132\'.object_detection.protos.Po" +
      "stProcessing\022+\n\035normalize_loss_by_num_ma" +
      "tches\030\n \001(\010:\004true\022-\n\036normalize_loc_loss_" +
      "by_codesize\030\016 \001(\010:\005false\022+\n\004loss\030\013 \001(\0132\035" +
      ".object_detection.protos.Loss\022\037\n\020freeze_" +
      "batchnorm\030\020 \001(\010:\005false\022\'\n\030inplace_batchn" +
      "orm_update\030\017 \001(\010:\005false\022.\n\037weight_regres" +
      "sion_loss_by_score\030\021 \001(\010:\005false\022>\n/use_e" +
      "xpected_classification_loss_under_sampli" +
      "ng\030\022 \001(\010:\005false\022$\n\031minimum_negative_samp" +
      "ling\030\023 \001(\002:\0010\022*\n\037desired_negative_sampli" +
      "ng_ratio\030\024 \001(\002:\0013\"\366\002\n\023SsdFeatureExtracto" +
      "r\022\014\n\004type\030\001 \001(\t\022\033\n\020depth_multiplier\030\002 \001(" +
      "\002:\0011\022\025\n\tmin_depth\030\003 \001(\005:\00216\022>\n\020conv_hype" +
      "rparams\030\004 \001(\0132$.object_detection.protos." +
      "Hyperparams\022:\n+override_base_feature_ext" +
      "ractor_hyperparams\030\t \001(\010:\005false\022\032\n\017pad_t" +
      "o_multiple\030\005 \001(\005:\0011\022#\n\024use_explicit_padd" +
      "ing\030\007 \001(\010:\005false\022\034\n\ruse_depthwise\030\010 \001(\010:" +
      "\005false\022<\n\003fpn\030\n \001(\0132/.object_detection.p" +
      "rotos.FeaturePyramidNetworksJ\004\010\006\020\007\"D\n\026Fe" +
      "aturePyramidNetworks\022\024\n\tmin_level\030\001 \001(\005:" +
      "\0013\022\024\n\tmax_level\030\002 \001(\005:\0017"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          object_detection.protos.AnchorGeneratorOuterClass.getDescriptor(),
          object_detection.protos.BoxCoderOuterClass.getDescriptor(),
          object_detection.protos.BoxPredictorOuterClass.getDescriptor(),
          object_detection.protos.HyperparamsOuterClass.getDescriptor(),
          object_detection.protos.ImageResizerOuterClass.getDescriptor(),
          object_detection.protos.MatcherOuterClass.getDescriptor(),
          object_detection.protos.Losses.getDescriptor(),
          object_detection.protos.PostProcessingOuterClass.getDescriptor(),
          object_detection.protos.RegionSimilarityCalculatorOuterClass.getDescriptor(),
        }, assigner);
    internal_static_object_detection_protos_Ssd_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_object_detection_protos_Ssd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_Ssd_descriptor,
        new java.lang.String[] { "NumClasses", "ImageResizer", "FeatureExtractor", "BoxCoder", "Matcher", "SimilarityCalculator", "EncodeBackgroundAsZeros", "NegativeClassWeight", "BoxPredictor", "AnchorGenerator", "PostProcessing", "NormalizeLossByNumMatches", "NormalizeLocLossByCodesize", "Loss", "FreezeBatchnorm", "InplaceBatchnormUpdate", "WeightRegressionLossByScore", "UseExpectedClassificationLossUnderSampling", "MinimumNegativeSampling", "DesiredNegativeSamplingRatio", });
    internal_static_object_detection_protos_SsdFeatureExtractor_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_object_detection_protos_SsdFeatureExtractor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SsdFeatureExtractor_descriptor,
        new java.lang.String[] { "Type", "DepthMultiplier", "MinDepth", "ConvHyperparams", "OverrideBaseFeatureExtractorHyperparams", "PadToMultiple", "UseExplicitPadding", "UseDepthwise", "Fpn", });
    internal_static_object_detection_protos_FeaturePyramidNetworks_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_object_detection_protos_FeaturePyramidNetworks_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_FeaturePyramidNetworks_descriptor,
        new java.lang.String[] { "MinLevel", "MaxLevel", });
    object_detection.protos.AnchorGeneratorOuterClass.getDescriptor();
    object_detection.protos.BoxCoderOuterClass.getDescriptor();
    object_detection.protos.BoxPredictorOuterClass.getDescriptor();
    object_detection.protos.HyperparamsOuterClass.getDescriptor();
    object_detection.protos.ImageResizerOuterClass.getDescriptor();
    object_detection.protos.MatcherOuterClass.getDescriptor();
    object_detection.protos.Losses.getDescriptor();
    object_detection.protos.PostProcessingOuterClass.getDescriptor();
    object_detection.protos.RegionSimilarityCalculatorOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
